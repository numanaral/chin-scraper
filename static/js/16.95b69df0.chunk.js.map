{"version":3,"sources":["hooks/useRenderedCount.js","components/Hanzi/constants.js","components/Hanzi/types.js","components/Hanzi/Background/Plain.js","components/Hanzi/Background/types.js","components/Hanzi/Background/RiceGrid.js","components/Hanzi/Background/Background.js","components/Hanzi/Hanzi.js","components/Hanzi/useHanzi.js","hooks/useOuterClick.js","containers/Learn/CardGrid/Card/transitions.js","containers/Learn/CardGrid/Card/constants.js","containers/Learn/CardGrid/types.js","containers/Learn/CardGrid/Card/types.js","components/ForwardingDiv/types.js","components/ForwardingDiv/ForwardingDiv.js","containers/Learn/CardGrid/Card/CardPlaceholder.js","containers/Learn/CardGrid/Card/CardWrapper.js","containers/Learn/CardGrid/Card/CardContainer.js","utils/dom.js","api/proxyApi.js","api/hanziTrainerProApi.js","containers/Learn/CardGrid/Card/MoreInfoContainer/types.js","containers/Learn/CardGrid/Card/TypographyWrapper.js","containers/Learn/CardGrid/Card/MoreInfoContainer/DetailTitle.js","containers/Learn/CardGrid/Card/MoreInfoContainer/DetailGroupBody.js","containers/Learn/CardGrid/Card/MoreInfoContainer/Details.js","containers/Learn/CardGrid/Card/MoreInfoContainer/MoreInfoContainer.js","containers/Learn/CardGrid/Card/ExtrasContainer.js","containers/Learn/CardGrid/Card/WordInfoGroup.js","containers/Learn/CardGrid/Card/WordActionGroup.js","containers/Learn/CardGrid/Card/FocusModeInfoText.js","containers/Learn/CardGrid/Card/CardInnerContainerFront.js","containers/Learn/CardGrid/Card/CardInnerContainerBack.js","containers/Learn/CardGrid/Card/Card.js","containers/Learn/CardGrid/FocusModeWrapper.js","containers/Learn/CardGrid/CardGrid.js"],"names":["useRenderedCount","name","wrap","count","useRef","c","current","_name","console","log","getDefaultHanziWriterOptions","theme","width","height","padding","strokeColor","palette","primary","main","radicalColor","success","delayBetweenStrokes","delayBetweenLoops","drawingColor","text","START_MODES","LOOP","DRAW_ONCE","QUIZ","QUIZ_CHALLENGE","QUIZ_CHALLENGE_HIGHLIGHT_ONCE","DEFAULT_OPTIONS","size","hanziWriterOptions","riceGrid","startMode","refType","isRequired","numberOrString","bool","Plain","memo","forwardRef","props","ref","defaultProps","string","color","opacity","RiceGrid","StyledLine","stroke","strokeOpacity","xmlns","x1","y1","x2","y2","Background","rest","Bg","Hanzi","innerRef","useHanzi","character","options","useState","bgSize","setBgSize","writer","setWriter","useTheme","charRef","writeHanzi","newCharacter","newOptions","_options","showOutline","showCharacter","querySelectorAll","forEach","e","remove","hanziWriter","HanziWriter","create","recursiveQuiz","quiz","onComplete","setTimeout","loopCharacterAnimation","useEffect","hanzi","rewrite","require","useOuterClick","cb","callbackRef","handleClick","contains","target","document","addEventListener","removeEventListener","dropFromTheSky","distance","reverse","initial","y","pointerEvents","animate","spring","type","stiffness","duration","easeOut","ease","cardAnimationVariants","isFocusMode","scale","isHovering","rotate","zIndex","isNotHovering","isParentHovering","margin","spacing","marginBottom","borderRadius","shape","transition","isParentNotHovering","cardInnerContainerFrontAnimationVariants","isFlipped","rotateY","isNotFlipped","isNotFocusMode","cardInnerContainerBackAnimationVariants","wordActionGroupExit","overflow","cardProps","id","translation","pinyin","cardType","arrayOf","object","func","propTypes","className","component","elementType","ForwardingDiv","div","CardPlaceholder","styled","motion","custom","$isParentHovering","$isFocusMode","smAndDown","useMediaQuery","t","breakpoints","down","topNavbarDiff","bottomNavbarDiff","footerDiff","background","level1","shadows","CardWrapper","CardContainer","parseHtmlFromResponse","response","DOMParser","parseFromString","matchElementByText","html","elementQuery","exact","xpath","matchedElement","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","proxy","url","params","parse","server","get","API_NAME","getApiUrl","a","tonelessPinyin","removeTones","proxyPage","hanTrainerProUrl","getKeyDomNode","getValueDomNode","matchedKeyDomNode","closest","nextElementSibling","logInnerError","err","failedFor","warn","generateDetail","title","body","normalizeHanziTrainerDetails","translations","example","wordsContaining","generatedDetails","isEmptyObject","push","reduce","acc","wordHanzi","error","getHanziTrainerDetails","details","Error","getMatchedNode","translationMatch","querySelector","innerText","replace","split","map","w","trim","exampleMatch","exampleNodes","children","wordsContainingMatch","wordsContainingMatchNodes","node","split2","split3","message","oneOfType","array","isVisible","TypographyWrapper","isKey","Typography","variant","DetailTitle","firstCapital","DetailGroupBody","Array","isArray","Object","keys","key","pascalToSentence","Details","Divider","MoreInfoContainer","setDetails","pending","setPending","fetchExtraTranslations","hanziTrainerDetails","v","length","loadCharacterData","onLoadCharDataSuccess","radStrokes","strokes","totalStrokeCount","radicalStrokeCount","boxProps","p","display","justifyContent","alignItems","Box","LoadingIndicator","ExtrasContainer","$position","$isHovering","level2","WordInfoGroup","visible","WordActionGroup","setIsFlipped","isChallengeMode","setIsChallengeMode","onSetFocusMode","startQuiz","fallDistance","exit","TooltipButton","tooltip","onClick","noop","icon","FavoriteIcon","disabled","trySpeakNative","SpeakIcon","InfoIcon","bg","hideOutline","MedalIcon","cancelQuiz","CancelIcon","GestureIcon","FocusModeInfoText","CardInnerContainerFront","CardInnerContainerBack","$isFlipped","Card","isChildInFocusMode","setIsChildInFocusMode","setIsHovering","setIsFocusMode","currentCard","_isHovering","_isParentHovering","scrollIntoView","block","behavior","onTapCancel","layout","variants","onHoverStart","onHoverEnd","FocusModeWrapper","CardGrid","cards","ContainerWithCenteredItems","onMouseEnter","onMouseLeave","card"],"mappings":"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","file":"static/js/16.95b69df0.chunk.js","sourcesContent":["import { useRef } from 'react';\r\n\r\n/**\r\n * Counts the time a component was rendered\r\n *\r\n * @param {String} name - Name of the component\r\n * @param {Boolean} wrap - Should wrap with < and />?\r\n */\r\nconst useRenderedCount = (name, wrap = true) => {\r\n\tconst count = useRef(1);\r\n\tconst { current: c } = count;\r\n\tconst _name = (wrap && `<${name} /> `) || `\"${name}\"`;\r\n\tconsole.log(`Rendered ${_name} ${c} time${(c > 1 && 's') || ''}`);\r\n\tcount.current += 1;\r\n};\r\n\r\nexport default useRenderedCount;\r\n","const getDefaultHanziWriterOptions = theme => ({\r\n\twidth: 150,\r\n\theight: 150,\r\n\tpadding: 5,\r\n\tstrokeColor: theme.palette.primary.main,\r\n\tradicalColor: theme.palette.success.main,\r\n\t// strokeAnimationSpeed: 1,\r\n\tdelayBetweenStrokes: 200,\r\n\tdelayBetweenLoops: 500,\r\n\tdrawingColor: theme.palette.text.primary,\r\n\t// drawingWidth: 25,\r\n});\r\n\r\nconst START_MODES = {\r\n\tLOOP: 'loop',\r\n\tDRAW_ONCE: 'drawOnce',\r\n\tQUIZ: 'quiz',\r\n\tQUIZ_CHALLENGE: 'quizChallenge',\r\n\tQUIZ_CHALLENGE_HIGHLIGHT_ONCE: 'quizChallengeHighlightOnce',\r\n};\r\n\r\nconst DEFAULT_OPTIONS = {\r\n\tsize: 150,\r\n\thanziWriterOptions: {},\r\n\triceGrid: true,\r\n\tstartMode: START_MODES.LOOP,\r\n};\r\n\r\nexport { getDefaultHanziWriterOptions, START_MODES, DEFAULT_OPTIONS };\r\n","import { numberOrString, refType } from 'components/types';\r\nimport { bool } from 'prop-types';\r\n\r\nconst propTypes = {\r\n\tinnerRef: refType.isRequired,\r\n\tsize: numberOrString.isRequired,\r\n\triceGrid: bool,\r\n};\r\n\r\nconst defaultProps = {\r\n\triceGrid: true,\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import React, { memo, forwardRef } from 'react';\r\n\r\nconst Plain = memo(forwardRef((props, ref) => <div {...props} ref={ref} />));\r\n\r\nexport default Plain;\r\n","import { bool, string } from 'prop-types';\r\n\r\nimport { numberOrString } from 'components/types';\r\n\r\nconst propTypes = {\r\n\triceGrid: bool,\r\n\tsize: numberOrString,\r\n\tcolor: string,\r\n\topacity: numberOrString,\r\n};\r\nconst defaultProps = {\r\n\triceGrid: true,\r\n\tsize: 150,\r\n\tcolor: '#f50057',\r\n\topacity: 0.4,\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import useRenderedCount from 'hooks/useRenderedCount';\r\nimport React, { forwardRef, memo } from 'react';\r\n\r\nimport { propTypes, defaultProps } from './types';\r\n\r\nconst RiceGrid = memo(\r\n\tforwardRef(({ size, color, opacity }, ref) => {\r\n\t\tuseRenderedCount('Stroked');\r\n\t\tconst StyledLine = props => (\r\n\t\t\t<line {...props} stroke={color} strokeOpacity={opacity} />\r\n\t\t);\r\n\t\treturn (\r\n\t\t\t<svg\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\twidth={size}\r\n\t\t\t\theight={size}\r\n\t\t\t\tref={ref}\r\n\t\t\t>\r\n\t\t\t\t<StyledLine x1=\"0\" y1=\"0\" x2={size} y2={size} />\r\n\t\t\t\t<StyledLine x1={size} y1=\"0\" x2=\"0\" y2={size} />\r\n\t\t\t\t<StyledLine x1={size / 2} y1=\"0\" x2={size / 2} y2={size} />\r\n\t\t\t\t<StyledLine x1=\"0\" y1={size / 2} x2={size} y2={size / 2} />\r\n\t\t\t</svg>\r\n\t\t);\r\n\t})\r\n);\r\n\r\nRiceGrid.propTypes = propTypes;\r\nRiceGrid.defaultProps = defaultProps;\r\n\r\nexport default RiceGrid;\r\n","import React, { memo, forwardRef } from 'react';\r\n\r\nimport Plain from './Plain';\r\nimport RiceGrid from './RiceGrid';\r\nimport { propTypes, defaultProps } from './types';\r\n\r\nconst Background = memo(\r\n\tforwardRef(({ riceGrid, ...rest }, ref) => {\r\n\t\tconst Bg = (riceGrid && RiceGrid) || Plain;\r\n\t\treturn <Bg {...rest} ref={ref} />;\r\n\t})\r\n);\r\n\r\nBackground.propTypes = propTypes;\r\nBackground.defaultProps = defaultProps;\r\n\r\nexport default Background;\r\n","import React, { memo } from 'react';\r\n\r\nimport useRenderedCount from 'hooks/useRenderedCount';\r\nimport { propTypes, defaultProps } from './types';\r\nimport Background from './Background';\r\n\r\nconst Hanzi = memo(({ innerRef, size, riceGrid }) => {\r\n\tuseRenderedCount('Hanzi');\r\n\r\n\treturn <Background size={size} riceGrid={riceGrid} ref={innerRef} />;\r\n});\r\n\r\nHanzi.propTypes = propTypes;\r\nHanzi.defaultProps = defaultProps;\r\n\r\nexport default Hanzi;\r\n","import { useTheme } from '@material-ui/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport HanziWriter from 'hanzi-writer';\r\n\r\nimport Hanzi from './Hanzi';\r\n\r\nimport {\r\n\tgetDefaultHanziWriterOptions,\r\n\tDEFAULT_OPTIONS,\r\n\tSTART_MODES,\r\n} from './constants';\r\n\r\n/**\r\n * Creates and returns a re-writeable and configurable Hanzi\r\n * @param {String} character Single Hanzi.\r\n * @param {Object} options Options for building the hanzi\r\n * - size, startMode, riceGrid\r\n */\r\nconst useHanzi = (character, options = DEFAULT_OPTIONS) => {\r\n\t/** @type {[Writer, SetStateAction<Writer>]} */\r\n\tconst [bgSize, setBgSize] = useState(options.size || 150);\r\n\tconst [writer, setWriter] = useState(null);\r\n\tconst theme = useTheme();\r\n\r\n\t/** @type {import('react').Ref<HTMLElement>} */\r\n\tconst charRef = useRef();\r\n\r\n\tconst writeHanzi = (newCharacter = character, newOptions = options) => {\r\n\t\tconst _options = {\r\n\t\t\t...DEFAULT_OPTIONS,\r\n\t\t\t...newOptions,\r\n\t\t\thanziWriterOptions: {\r\n\t\t\t\twidth: newOptions.width || newOptions.size,\r\n\t\t\t\theight: newOptions.height || newOptions.size,\r\n\t\t\t\tshowOutline:\r\n\t\t\t\t\t(options || DEFAULT_OPTIONS).startMode !==\r\n\t\t\t\t\tSTART_MODES.QUIZ_CHALLENGE,\r\n\t\t\t\tshowCharacter:\r\n\t\t\t\t\t(options || DEFAULT_OPTIONS).startMode !==\r\n\t\t\t\t\tSTART_MODES.QUIZ_CHALLENGE,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tif (bgSize !== _options.size) setBgSize(_options.size);\r\n\r\n\t\tif (charRef.current) {\r\n\t\t\t// Clear the previous writing first\r\n\t\t\tif (writer) {\r\n\t\t\t\tcharRef.current\r\n\t\t\t\t\t.querySelectorAll((options.riceGrid && 'defs, g') || 'svg')\r\n\t\t\t\t\t.forEach(e => e.remove());\r\n\t\t\t}\r\n\r\n\t\t\t/** @type {Writer} */\r\n\t\t\tconst hanziWriter = HanziWriter.create(\r\n\t\t\t\tcharRef.current,\r\n\t\t\t\tnewCharacter,\r\n\t\t\t\t{\r\n\t\t\t\t\t...getDefaultHanziWriterOptions(theme),\r\n\t\t\t\t\t..._options.hanziWriterOptions,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tconst recursiveQuiz = () => {\r\n\t\t\t\thanziWriter.quiz({\r\n\t\t\t\t\tonComplete: () => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\trecursiveQuiz();\r\n\t\t\t\t\t\t}, 1200);\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tsetWriter(hanziWriter);\r\n\t\t\tswitch (newOptions.startMode) {\r\n\t\t\t\tcase START_MODES.LOOP:\r\n\t\t\t\t\thanziWriter.loopCharacterAnimation();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase START_MODES.QUIZ:\r\n\t\t\t\t\trecursiveQuiz();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase START_MODES.QUIZ_CHALLENGE_HIGHLIGHT_ONCE:\r\n\t\t\t\t\trecursiveQuiz();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase START_MODES.QUIZ_CHALLENGE:\r\n\t\t\t\t\trecursiveQuiz();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// No Default\r\n\t\t\t\t\t// DRAW_ONCE\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\twriteHanzi();\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\treturn {\r\n\t\thanzi: (\r\n\t\t\t<Hanzi\r\n\t\t\t\tinnerRef={charRef}\r\n\t\t\t\tsize={bgSize}\r\n\t\t\t\triceGrid={options.riceGrid}\r\n\t\t\t/>\r\n\t\t),\r\n\t\trewrite: writeHanzi,\r\n\t\twriter,\r\n\t};\r\n};\r\n\r\nexport default useHanzi;\r\n","const { useRef, useEffect } = require('react');\r\n\r\n// https://stackoverflow.com/a/54292872/13161405\r\nconst useOuterClick = cb => {\r\n\tconst callbackRef = useRef(); // initialize mutable callback ref\r\n\tconst innerRef = useRef(); // returned to client, who sets the \"border\" element\r\n\r\n\t// update callback on each render, so second useEffect has most recent callback\r\n\tuseEffect(() => {\r\n\t\tcallbackRef.current = cb;\r\n\t});\r\n\tuseEffect(() => {\r\n\t\tconst handleClick = e => {\r\n\t\t\tif (\r\n\t\t\t\tinnerRef.current &&\r\n\t\t\t\tcallbackRef.current &&\r\n\t\t\t\t!innerRef.current.contains(e.target)\r\n\t\t\t)\r\n\t\t\t\tcallbackRef.current(e);\r\n\t\t};\r\n\t\tdocument.addEventListener('click', handleClick);\r\n\t\treturn () => document.removeEventListener('click', handleClick);\r\n\t}, []); // no dependencies -> stable click listener\r\n\r\n\treturn innerRef; // convenience for client (doesn't need to init ref himself)\r\n};\r\n\r\nexport default useOuterClick;\r\n","import { CARD_BASE_SIZE, CARD_FOCUS_MODE_SIZE } from './constants';\r\n\r\n/** @returns {{initial: TargetAndTransition, animate: TargetAndTransition}} */\r\nconst dropFromTheSky = (distance = 250, reverse = false) => ({\r\n\tinitial: {\r\n\t\ty: !reverse ? -distance : 0,\r\n\t\topacity: !reverse ? 0 : 1,\r\n\t\tpointerEvents: 'none',\r\n\t},\r\n\tanimate: {\r\n\t\ty: !reverse ? 0 : -distance,\r\n\t\topacity: !reverse ? 1 : 0,\r\n\t\tpointerEvents: 'initial',\r\n\t},\r\n});\r\n\r\n/** @type {TargetAndTransition} */\r\nconst exit = {\r\n\tscale: 20,\r\n\topacity: 0,\r\n\tpointerEvents: 'none',\r\n\ttransition: {\r\n\t\tease: 'easeIn',\r\n\t\tdelay: 0.2,\r\n\t\t// duration: 1,\r\n\t\ttransitionEnd: { display: 'none' },\r\n\t},\r\n};\r\n\r\nconst spring = {\r\n\ttype: 'spring',\r\n\tstiffness: 1000,\r\n\t// damping: 5,\r\n\tduration: 0,\r\n};\r\n\r\nconst easeOut = {\r\n\tease: 'easeOut',\r\n\tduration: 0.2,\r\n};\r\n\r\nconst cardAnimationVariants = {\r\n\t/**\r\n\t * @param {MuiTheme} theme - MuiTheme\r\n\t * @returns {TargetAndTransition}\r\n\t */\r\n\tisFocusMode: () => ({\r\n\t\t// width: '100% !important',\r\n\t\t// height: '100% !important',\r\n\t\t// position: 'absolute',\r\n\t\t// top: 0,\r\n\t\t// left: 0,\r\n\t\tscale: 1,\r\n\t}),\r\n\t/**\r\n\t * @param {MuiTheme} theme - MuiTheme\r\n\t * @returns {TargetAndTransition}\r\n\t */\r\n\tisHovering: () => ({\r\n\t\trotate: [0, 5, -5, 5, -5, 0, 0],\r\n\t\tscale: [1, 1, 1.8],\r\n\t\tzIndex: 3,\r\n\t}),\r\n\t/**\r\n\t * @param {MuiTheme} theme - MuiTheme\r\n\t * @returns {TargetAndTransition}\r\n\t */\r\n\tisNotHovering: () => ({\r\n\t\trotate: 0,\r\n\t\tscale: 1,\r\n\t\tzIndex: 1,\r\n\t}),\r\n\t/**\r\n\t * @param {MuiTheme} theme - MuiTheme\r\n\t * @returns {TargetAndTransition}\r\n\t */\r\n\tisParentHovering: theme => ({\r\n\t\tmargin: `${theme.spacing(1)}px`,\r\n\t\t/* NOTE: This will be dynamic i.e. use wants to see the translation and pinyin, then there will be margin */\r\n\t\tmarginBottom: `${theme.spacing(1) + 20}px`,\r\n\t\twidth: theme.spacing(23),\r\n\t\theight: theme.spacing(23),\r\n\t\tborderRadius: `${theme.shape.borderRadius}px`,\r\n\t\ttransition: spring,\r\n\t}),\r\n\t/**\r\n\t * @param {MuiTheme} theme - MuiTheme\r\n\t * @returns {TargetAndTransition}\r\n\t */\r\n\tisParentNotHovering: theme => ({\r\n\t\tmargin: `${0}px`,\r\n\t\t/* NOTE: This will be dynamic i.e. use wants to see the translation and pinyin, then there will be margin */\r\n\t\tmarginBottom: '20px',\r\n\t\twidth: theme.spacing(25),\r\n\t\theight: theme.spacing(25),\r\n\t\tborderRadius: `${0}px`,\r\n\t\ttransition: easeOut,\r\n\t}),\r\n};\r\n\r\nconst cardInnerContainerFrontAnimationVariants = {\r\n\tisFlipped: {\r\n\t\trotateY: -180,\r\n\t},\r\n\tisNotFlipped: {\r\n\t\trotateY: 0,\r\n\t},\r\n\tisFocusMode: {\r\n\t\twidth: CARD_FOCUS_MODE_SIZE,\r\n\t\theight: CARD_FOCUS_MODE_SIZE,\r\n\t},\r\n\tisNotFocusMode: {\r\n\t\twidth: CARD_BASE_SIZE,\r\n\t\theight: CARD_BASE_SIZE,\r\n\t},\r\n};\r\n\r\nconst cardInnerContainerBackAnimationVariants = {\r\n\tisFlipped: {\r\n\t\trotateY: 0,\r\n\t},\r\n\tisNotFlipped: {\r\n\t\trotateY: 180,\r\n\t},\r\n};\r\n\r\nconst wordActionGroupExit = {\r\n\theight: 0,\r\n\topacity: 0,\r\n\toverflow: 'hidden',\r\n\ttransition: { duration: 0.3 },\r\n};\r\n\r\nexport {\r\n\tdropFromTheSky,\r\n\texit,\r\n\tspring,\r\n\teaseOut,\r\n\tcardAnimationVariants,\r\n\tcardInnerContainerFrontAnimationVariants,\r\n\tcardInnerContainerBackAnimationVariants,\r\n\twordActionGroupExit,\r\n};\r\n","const CARD_BASE_SIZE = 150;\r\nconst CARD_FOCUS_MODE_SIZE = 275;\r\n\r\nexport { CARD_BASE_SIZE, CARD_FOCUS_MODE_SIZE };\r\n","import { arrayOf, string, shape } from 'prop-types';\r\n\r\nconst cardProps = {\r\n\ttext: string,\r\n\tid: string.isRequired,\r\n\thanzi: string.isRequired,\r\n\ttranslation: string.isRequired,\r\n\tpinyin: string.isRequired,\r\n};\r\n\r\nconst cardType = shape(cardProps);\r\n\r\nconst cards = arrayOf(cardType);\r\n\r\nconst propTypes = {\r\n\tcards,\r\n};\r\n\r\nconst defaultProps = {\r\n\tcards: [],\r\n};\r\n\r\nexport { cardProps, cardType, cards, propTypes, defaultProps };\r\n","import { string, bool, object, func } from 'prop-types';\r\nimport { theme } from 'components/types';\r\nimport { cardType } from '../types';\r\n\r\nconst cardPropTypes = {\r\n\ttext: string.isRequired,\r\n\tisParentHovering: bool.isRequired,\r\n};\r\nconst cardDefaultProps = {};\r\n\r\nconst wordInfoGroupPropTypes = {\r\n\tisParentHovering: bool.isRequired,\r\n\tisHovering: bool.isRequired,\r\n\tcardProps: cardType.isRequired,\r\n\tvisible: bool.isRequired,\r\n};\r\n\r\nconst wordInfoGroupDefaultProps = {};\r\n\r\nconst writerType = object;\r\n\r\nconst wordActionGroupPropTypes = {\r\n\twriter: writerType.isRequired,\r\n\tisParentHovering: bool.isRequired,\r\n\tisHovering: bool.isRequired,\r\n\ttheme,\r\n\tisFlipped: bool.isRequired,\r\n\tsetIsFlipped: func.isRequired,\r\n\tisChallengeMode: bool.isRequired,\r\n\tsetIsChallengeMode: func.isRequired,\r\n\tisFocusMode: bool.isRequired,\r\n\tonSetFocusMode: func.isRequired,\r\n\tcardProps: cardType.isRequired,\r\n};\r\nconst wordActionGroupDefaultProps = {};\r\n\r\nexport {\r\n\tcardPropTypes,\r\n\tcardDefaultProps,\r\n\twordInfoGroupPropTypes,\r\n\twordInfoGroupDefaultProps,\r\n\twriterType,\r\n\twordActionGroupPropTypes,\r\n\twordActionGroupDefaultProps,\r\n};\r\n","import { elementType, string } from 'prop-types';\r\n\r\nconst propTypes = {\r\n\tclassName: string,\r\n\tcomponent: elementType,\r\n};\r\nconst defaultProps = {\r\n\tclassName: '',\r\n\tcomponent: 'div',\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import { motion } from 'framer-motion';\r\nimport React, { forwardRef } from 'react';\r\n\r\nimport { propTypes, defaultProps } from './types';\r\n\r\n/**\r\n * @component\r\n *\r\n * @param {Object} props\r\n * @param {import('react').ElementType|HTMLElementTagNameMap} props.component\r\n * @param {...any} props.rest\r\n */\r\nconst ForwardingDiv = forwardRef(({ className, component, ...rest }, ref) => (\r\n\t<motion.div\r\n\t\tclassName={\r\n\t\t\t`theme-duration-wrapper${className && ` ${className}`}` || ''\r\n\t\t}\r\n\t\t{...rest}\r\n\t\tref={ref}\r\n\t/>\r\n));\r\n\r\nForwardingDiv.propTypes = propTypes;\r\nForwardingDiv.defaultProps = defaultProps;\r\n\r\nexport default ForwardingDiv;\r\n","import styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport ForwardingDiv from 'components/ForwardingDiv';\r\n\r\nconst CardPlaceholder = styled(motion.custom(ForwardingDiv))`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tmargin: 0px;\r\n\t${({ theme, $isParentHovering, $isFocusMode }) => {\r\n\t\tconst smAndDown = useMediaQuery(t => t.breakpoints.down('sm'));\r\n\t\t// This always appears\r\n\t\tconst topNavbarDiff = '64px';\r\n\t\t// This only appears on small device\r\n\t\tconst bottomNavbarDiff = (smAndDown && ' + 56px') || '';\r\n\t\t// This only appears on bigger device\r\n\t\tconst footerDiff = (!smAndDown && ' + 30px') || '';\r\n\r\n\t\t// Translation & Pinyin height\r\n\t\tconst translationAndPinyinDiff = ' + 20px';\r\n\t\t// Extra buttons height\r\n\t\tconst extraButtonsDiff = ' + 35px';\r\n\r\n\t\treturn `\t\t\r\n\t\t\tborder-color: ${theme.palette.background.level1};\r\n\t\t\tbackground-color: ${theme.palette.background.level1};\r\n\t\t\tbox-shadow: ${($isParentHovering && theme.shadows[3]) || 'none'};\r\n\t\t\t${\r\n\t\t\t\t($isFocusMode &&\r\n\t\t\t\t\t`\r\n\t\t\t\t// Navigation + Footer (if desktop) + BottomNavbar (if mobile)\r\n\t\t\t\theight: calc(100% - (${topNavbarDiff}${bottomNavbarDiff}${footerDiff}${translationAndPinyinDiff}${extraButtonsDiff})) !important;\r\n\t\t\t\t// some extra push from the top\r\n\t\t\t\ttop: calc(${topNavbarDiff} + 15px);\r\n\t\t\t\twidth: 100% !important;\r\n\t\t\t\tposition: fixed;\r\n\t\t\t\tleft: 0;\r\n\t\t\t\tmargin: 0 !important;\r\n\t\t\t`) ||\r\n\t\t\t\t''\r\n\t\t\t}\r\n\t\t`;\r\n\t}}\r\n`;\r\n\r\nexport default CardPlaceholder;\r\n","import styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport ForwardingDiv from 'components/ForwardingDiv';\r\n\r\nconst CardWrapper = styled(motion.custom(ForwardingDiv))`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tposition: relative;\r\n\t${({ theme, $isParentHovering }) => `\r\n\t\tborder-radius: ${($isParentHovering && theme.shape.borderRadius) || 0}px;\r\n\t`}\r\n`;\r\n\r\nexport default CardWrapper;\r\n","import styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport ForwardingDiv from 'components/ForwardingDiv';\r\n\r\nconst CardContainer = styled(motion.custom(ForwardingDiv))`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\t${({ theme }) => `\r\n\t\tpadding: ${theme.spacing(1)}px;\r\n\t\tbackground-color: ${theme.palette.background.level1};\r\n\t\tbackground-color: ${theme.palette.background.level1};\r\n\t`}\r\n`;\r\n\r\nexport default CardContainer;\r\n","const parseHtmlFromResponse = response => {\r\n\tconst parser = new DOMParser();\r\n\tconst doc = parser.parseFromString(response, 'text/html');\r\n\r\n\treturn doc;\r\n};\r\n\r\nconst matchElementByText = (html, elementQuery, text, exact = true) => {\r\n\t// https://stackoverflow.com/a/29289196/13161405 (xpath algorithm)\r\n\tconst xpath =\r\n\t\t(exact && `//${elementQuery}[text()='${text}']`) ||\r\n\t\t`//${elementQuery}[contains(text(),'${text}')]`;\r\n\r\n\tconst matchedElement = html.evaluate(\r\n\t\txpath,\r\n\t\thtml,\r\n\t\tnull,\r\n\t\tXPathResult.FIRST_ORDERED_NODE_TYPE,\r\n\t\tnull\r\n\t).singleNodeValue;\r\n\r\n\treturn matchedElement;\r\n};\r\n\r\nexport { parseHtmlFromResponse, matchElementByText };\r\n","import { server, parse } from './rest';\r\n\r\nconst PROXY_ROUTE = 'proxy/';\r\n\r\nconst proxy = (url, params) => parse(server.get(PROXY_ROUTE + url, params));\r\n\r\nexport default proxy;\r\n","import { removeTones } from 'utils/chinese';\r\nimport { isEmptyObject } from 'utils/object';\r\nimport { parseHtmlFromResponse, matchElementByText } from 'utils/dom';\r\nimport proxy from './proxyApi';\r\n\r\nconst API_NAME = 'Hanzi Trainer Pro';\r\nconst API_URL_PREFIX =\r\n\t'https://dictionary.hantrainerpro.com/chinese-english/translation-';\r\nconst API_URL_POSTFIX = '.htm';\r\nconst MATCH_WORD_TRANSLATIONS = 'English translations';\r\nconst MATCH_WORD_EXAMPLE = 'Chinese Pinyin example sentence with';\r\nconst MATCH_WORD_WORDS_CONTAINING =\r\n\t'Chinese example words containing the character';\r\n\r\nconst getApiUrl = async (pinyin, translation) => {\r\n\tconst tonelessPinyin = removeTones(pinyin);\r\n\treturn `${API_URL_PREFIX}${tonelessPinyin}_${translation}${API_URL_POSTFIX}`;\r\n};\r\n\r\n/**\r\n * @see\r\n *\r\n * @param {String} pinyin Pinyin to search\r\n */\r\nconst proxyPage = async (pinyin, translation) => {\r\n\tconst hanTrainerProUrl = await getApiUrl(pinyin, translation);\r\n\tconst response = await proxy(hanTrainerProUrl);\r\n\r\n\treturn response;\r\n};\r\n\r\nconst getKeyDomNode = (html, text, exact = true) =>\r\n\tmatchElementByText(html, 'b', text, exact);\r\n\r\nconst getValueDomNode = matchedKeyDomNode =>\r\n\tmatchedKeyDomNode.closest('div').nextElementSibling;\r\n\r\nconst logInnerError = (err, failedFor) => {\r\n\tconsole.warn(`Error parsing the ${failedFor} from ${API_NAME}`, {\r\n\t\terr,\r\n\t});\r\n};\r\n\r\nconst getHanziTrainerDetails = async (pinyin, translation) => {\r\n\tconst details = {\r\n\t\ttranslations: [],\r\n\t\texample: {},\r\n\t\twordsContaining: [],\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst response = await proxyPage(pinyin, translation);\r\n\t\tif (!response) throw new Error('Failed to proxy.');\r\n\r\n\t\tconst html = parseHtmlFromResponse(response);\r\n\t\tif (!html) throw new Error('Failed to parse the html.');\r\n\r\n\t\tconst getMatchedNode = (text, exact = true) =>\r\n\t\t\tgetValueDomNode(getKeyDomNode(html, text, exact));\r\n\r\n\t\t// English Translations\r\n\t\t/**\r\n\t\t * [\r\n\t\t * \t'good,\r\n\t\t * \t'kind',\r\n\t\t * \t'very',\r\n\t\t * ]\r\n\t\t */\r\n\t\ttry {\r\n\t\t\tconst translationMatch = getMatchedNode(MATCH_WORD_TRANSLATIONS);\r\n\t\t\tdetails.translations = translationMatch\r\n\t\t\t\t.querySelector('p')\r\n\t\t\t\t// eslint-disable-next-line prettier/prettier\r\n\t\t\t\t.innerText\r\n\t\t\t\t.replace(/\\n/, '')\r\n\t\t\t\t.split(',')\r\n\t\t\t\t.map(w => w.trim());\r\n\t\t} catch (err) {\r\n\t\t\tlogInnerError(err, 'translations');\r\n\t\t}\r\n\r\n\t\t// Example\r\n\t\t/**\r\n\t\t * {\r\n\t\t * \tpinyin: \"Zhè fēicháng hăo.\",\r\n\t\t * \ttranslation: \"This is very good.\"\r\n\t\t * }\r\n\t\t */\r\n\t\ttry {\r\n\t\t\tconst exampleMatch = getMatchedNode(MATCH_WORD_EXAMPLE, false);\r\n\t\t\tconst exampleNodes = [...exampleMatch.querySelectorAll('i')];\r\n\r\n\t\t\tdetails.example = {\r\n\t\t\t\tpinyin: `${exampleNodes[0].innerText.split('.')[1]}.`,\r\n\t\t\t\ttranslation: exampleNodes[1].children[0].innerText,\r\n\t\t\t};\r\n\t\t} catch (err) {\r\n\t\t\tlogInnerError(err, 'example');\r\n\t\t}\r\n\r\n\t\t// Other words containing this hanzi\r\n\t\t/**\r\n\t\t * [\r\n\t\t * \t{\r\n\t\t * \t\thanzi: \"不好意思\",\r\n\t\t * \t\tpinyin: \"bùhăoyìsi\",\r\n\t\t * \t\ttranslation: \"to feel embarrassed\"\r\n\t\t * \t},\r\n\t\t * ]\r\n\t\t */\r\n\t\ttry {\r\n\t\t\tconst wordsContainingMatch = getMatchedNode(\r\n\t\t\t\tMATCH_WORD_WORDS_CONTAINING,\r\n\t\t\t\tfalse\r\n\t\t\t);\r\n\t\t\tconst wordsContainingMatchNodes = [\r\n\t\t\t\t...wordsContainingMatch.children,\r\n\t\t\t];\r\n\t\t\tdetails.wordsContaining = wordsContainingMatchNodes.map(node => {\r\n\t\t\t\t// This doesn't work as some pinyin are separate\r\n\t\t\t\t// const match = node.innerText.match(/([^\\s()=,]+)/g);\r\n\r\n\t\t\t\t// Temp solution, I should try a better regex\r\n\t\t\t\tconst split = node.innerText.split('(');\r\n\t\t\t\tconst split2 = split[1].split('=');\r\n\t\t\t\tconst split3 = split2[1].split(')');\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\thanzi: split[0].trim(),\r\n\t\t\t\t\tpinyin: split2[0].trim(),\r\n\t\t\t\t\ttranslation: split3[0].trim(),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tlogInnerError(err, 'words containing');\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err.message, { err });\r\n\t}\r\n\treturn details;\r\n};\r\n\r\nconst generateDetail = (title, body) => ({ title, body });\r\n\r\nconst normalizeHanziTrainerDetails = (\r\n\t{ translations, example, wordsContaining },\r\n\thanzi\r\n) => {\r\n\tconst generatedDetails = [];\r\n\r\n\ttry {\r\n\t\tif (!isEmptyObject(translations)) {\r\n\t\t\tgeneratedDetails.push(generateDetail('Translations', translations));\r\n\t\t}\r\n\t\tif (!isEmptyObject(example)) {\r\n\t\t\tgeneratedDetails.push(\r\n\t\t\t\tgenerateDetail(`Example using ${hanzi}`, {\r\n\t\t\t\t\tpinyin: example.pinyin,\r\n\t\t\t\t\ttranslation: example.translation,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (!isEmptyObject(wordsContaining)) {\r\n\t\t\tgeneratedDetails.push(\r\n\t\t\t\tgenerateDetail(\r\n\t\t\t\t\t`Words containing ${hanzi}`,\r\n\t\t\t\t\twordsContaining.reduce(\r\n\t\t\t\t\t\t(acc, { hanzi: wordHanzi, pinyin, translation }) => {\r\n\t\t\t\t\t\t\tacc[wordHanzi] = `${translation} (${pinyin})`;\r\n\t\t\t\t\t\t\treturn acc;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{}\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(`Failed to normalize ${API_NAME} details`);\r\n\t}\r\n\r\n\treturn generatedDetails;\r\n};\r\n\r\nexport { normalizeHanziTrainerDetails };\r\nexport default getHanziTrainerDetails;\r\n","import { array, bool, node, object, oneOfType } from 'prop-types';\r\n\r\nimport { cardProps } from '../../types';\r\n\r\nconst detailGroupBodyPropTypes = {\r\n\tbody: oneOfType([object, array]),\r\n};\r\nconst detailGroupBodyDefaultProps = {\r\n\tbody: [],\r\n};\r\n\r\nconst detailTitlePropTypes = {\r\n\tisKey: bool,\r\n\tchildren: node,\r\n};\r\nconst detailTitleDefaultProps = {\r\n\tisKey: false,\r\n\tchildren: '',\r\n};\r\n\r\nconst moreInfoContainerPropTypes = {\r\n\tisVisible: bool.isRequired,\r\n\t...cardProps,\r\n};\r\nconst moreInfoContainerDefaultProps = {};\r\n\r\nexport {\r\n\tdetailGroupBodyPropTypes,\r\n\tdetailGroupBodyDefaultProps,\r\n\tdetailTitlePropTypes,\r\n\tdetailTitleDefaultProps,\r\n\tmoreInfoContainerPropTypes,\r\n\tmoreInfoContainerDefaultProps,\r\n};\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { bool } from 'prop-types';\r\n\r\nconst TypographyWrapper = ({ isKey, ...rest }) => (\r\n\t<Typography\r\n\t\tvariant=\"caption\"\r\n\t\t{...(isKey && { color: 'primary' })}\r\n\t\t{...rest}\r\n\t/>\r\n);\r\n\r\nTypographyWrapper.propTypes = {\r\n\tisKey: bool,\r\n};\r\nTypographyWrapper.defaultProps = {\r\n\tisKey: false,\r\n};\r\n\r\nexport default TypographyWrapper;\r\n","import React from 'react';\r\n\r\nimport { firstCapital } from 'utils';\r\nimport { detailTitlePropTypes, detailTitleDefaultProps } from './types';\r\nimport TypographyWrapper from '../TypographyWrapper';\r\n\r\nconst DetailTitle = ({ isKey, children, ...rest }) => (\r\n\t<TypographyWrapper variant=\"subtitle1\" component=\"b\" isKey {...rest}>\r\n\t\t{firstCapital(children)}\r\n\t</TypographyWrapper>\r\n);\r\n\r\nDetailTitle.propTypes = detailTitlePropTypes;\r\nDetailTitle.defaultProps = detailTitleDefaultProps;\r\n\r\nexport default DetailTitle;\r\n","import React from 'react';\r\n\r\nimport { firstCapital, pascalToSentence } from 'utils';\r\nimport TypographyWrapper from '../TypographyWrapper';\r\n\r\nimport { detailGroupBodyPropTypes, detailGroupBodyDefaultProps } from './types';\r\n\r\nconst DetailGroupBody = ({ body }) =>\r\n\t(Array.isArray(body) &&\r\n\t\tbody.map(text => (\r\n\t\t\t<TypographyWrapper key={text} component=\"p\">\r\n\t\t\t\t{text}\r\n\t\t\t</TypographyWrapper>\r\n\t\t))) ||\r\n\tObject.keys(body).map(key => (\r\n\t\t<TypographyWrapper component=\"p\" key={key}>\r\n\t\t\t<TypographyWrapper isKey>\r\n\t\t\t\t{firstCapital(pascalToSentence(key))}:\r\n\t\t\t</TypographyWrapper>{' '}\r\n\t\t\t<TypographyWrapper>{body[key]}</TypographyWrapper>\r\n\t\t</TypographyWrapper>\r\n\t));\r\n\r\nDetailGroupBody.propTypes = detailGroupBodyPropTypes;\r\nDetailGroupBody.defaultProps = detailGroupBodyDefaultProps;\r\n\r\nexport default DetailGroupBody;\r\n","import React from 'react';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nimport DetailTitle from './DetailTitle';\r\nimport DetailGroupBody from './DetailGroupBody';\r\n\r\nconst Details = ({ details }) =>\r\n\tdetails.map(({ title, body }) => (\r\n\t\t<div key={title}>\r\n\t\t\t{/* GROUP TITLE */}\r\n\t\t\t<DetailTitle>{title}</DetailTitle>\r\n\t\t\t<Divider />\r\n\t\t\t{/* KEY & VALUES */}\r\n\t\t\t{<DetailGroupBody body={body} />}\r\n\t\t\t<br />\r\n\t\t</div>\r\n\t));\r\n\r\nexport default Details;\r\n","import React, { memo, useEffect, useState } from 'react';\r\nimport { Box } from '@material-ui/core';\r\nimport HanziWriter from 'hanzi-writer';\r\n\r\nimport getHanziTrainerDetails, {\r\n\tnormalizeHanziTrainerDetails,\r\n} from 'api/hanziTrainerProApi';\r\nimport LoadingIndicator from 'components/LoadingIndicator';\r\nimport Details from './Details';\r\nimport {\r\n\tmoreInfoContainerPropTypes,\r\n\tmoreInfoContainerDefaultProps,\r\n} from './types';\r\n\r\nconst MoreInfoContainer = memo(({ isVisible, ...cardProps }) => {\r\n\tconst [details, setDetails] = useState([]);\r\n\tconst [pending, setPending] = useState(true);\r\n\tconst { hanzi, pinyin, translation } = cardProps;\r\n\tuseEffect(() => {\r\n\t\tconst loadStrokeDetails = () => {\r\n\t\t\tHanziWriter.loadCharacterData(hanzi, {\r\n\t\t\t\tonLoadCharDataSuccess: ({ radStrokes, strokes }) => {\r\n\t\t\t\t\tsetDetails(v => [\r\n\t\t\t\t\t\t...v,\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\ttitle: 'Stroke Details',\r\n\t\t\t\t\t\t\tbody: {\r\n\t\t\t\t\t\t\t\ttotalStrokeCount: strokes?.length || 'N/A',\r\n\t\t\t\t\t\t\t\tradicalStrokeCount: radStrokes?.length || 'N/A',\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]);\r\n\t\t\t\t},\r\n\t\t\t});\r\n\t\t};\r\n\t\tconst fetchExtraTranslations = async () => {\r\n\t\t\tconst hanziTrainerDetails = await getHanziTrainerDetails(\r\n\t\t\t\tpinyin,\r\n\t\t\t\ttranslation\r\n\t\t\t);\r\n\t\t\tsetDetails(v => [\r\n\t\t\t\t...v,\r\n\t\t\t\t...normalizeHanziTrainerDetails(hanziTrainerDetails, hanzi),\r\n\t\t\t]);\r\n\t\t\tsetPending(false);\r\n\t\t};\r\n\t\tconst loadCardDetails = () => {\r\n\t\t\tsetPending(true);\r\n\t\t\tloadStrokeDetails();\r\n\t\t\tfetchExtraTranslations();\r\n\t\t};\r\n\r\n\t\tif (isVisible && !details.length) loadCardDetails();\r\n\t}, [details, hanzi, isVisible, pinyin, translation]);\r\n\r\n\tconst boxProps = {\r\n\t\tp: 1,\r\n\t\twidth: '100%',\r\n\t\theight: '100%',\r\n\t\t...(pending && {\r\n\t\t\tdisplay: 'flex',\r\n\t\t\tjustifyContent: 'center',\r\n\t\t\talignItems: 'center',\r\n\t\t}),\r\n\t};\r\n\r\n\treturn (\r\n\t\tisVisible && (\r\n\t\t\t<Box {...boxProps}>\r\n\t\t\t\t{(pending && <LoadingIndicator size=\"large\" />) || (\r\n\t\t\t\t\t<Details details={details} />\r\n\t\t\t\t)}\r\n\t\t\t</Box>\r\n\t\t)\r\n\t);\r\n});\r\n\r\nMoreInfoContainer.propTypes = moreInfoContainerPropTypes;\r\nMoreInfoContainer.defaultProps = moreInfoContainerDefaultProps;\r\n\r\nexport default MoreInfoContainer;\r\n","import styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport ForwardingDiv from 'components/ForwardingDiv';\r\n\r\nconst ExtrasContainer = styled(motion.custom(ForwardingDiv))`\r\n\t${({ theme, $position, $isHovering, $isParentHovering }) => `\r\n\t\tbackground-color: ${theme.palette.background.level2};\r\n\t\t${($position !== 'top' && `box-shadow: ${theme.shadows[3]};`) || ''}\r\n\t\t${\r\n\t\t\t($isParentHovering &&\r\n\t\t\t\t`\r\n\t\t\tborder-${$position}-right-radius: ${theme.shape.borderRadius}px;\r\n\t\t\tborder-${$position}-left-radius: ${theme.shape.borderRadius}px;\r\n\t\t`) ||\r\n\t\t\t''\r\n\t\t}\r\n\t\t${$position}: -${($position === 'top' && (($isHovering && 11) || 20)) || 35}px;\r\n\t`}\r\n\t& .MuiIconButton-root {\r\n\t\tpadding: 10px;\r\n\t}\r\n\twidth: 100%;\r\n\t/* height: auto !important; */\r\n\tdisplay: flex;\r\n\tjustify-content: space-evenly;\r\n\tz-index: 1;\r\n\tposition: absolute;\r\n`;\r\n\r\nexport default ExtrasContainer;\r\n","import React from 'react';\r\n\r\nimport { wordInfoGroupPropTypes, wordInfoGroupDefaultProps } from './types';\r\nimport ExtrasContainer from './ExtrasContainer';\r\nimport TypographyWrapper from './TypographyWrapper';\r\n\r\nconst WordInfoGroup = ({\r\n\tisParentHovering,\r\n\tisHovering,\r\n\tcardProps,\r\n\tvisible,\r\n}) => {\r\n\tconst { translation, pinyin } = cardProps;\r\n\r\n\treturn (\r\n\t\tvisible && (\r\n\t\t\t<ExtrasContainer\r\n\t\t\t\t$position=\"top\"\r\n\t\t\t\t$isParentHovering={isParentHovering}\r\n\t\t\t\t$isHovering={isHovering}\r\n\t\t\t>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TypographyWrapper isKey>Translation:</TypographyWrapper>\r\n\t\t\t\t\t{` `}\r\n\t\t\t\t\t<TypographyWrapper>{translation}</TypographyWrapper>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TypographyWrapper isKey>Pinyin:</TypographyWrapper>{' '}\r\n\t\t\t\t\t<TypographyWrapper>{pinyin}</TypographyWrapper>\r\n\t\t\t\t</div>\r\n\t\t\t</ExtrasContainer>\r\n\t\t)\r\n\t);\r\n};\r\n\r\nWordInfoGroup.propTypes = wordInfoGroupPropTypes;\r\nWordInfoGroup.defaultProps = wordInfoGroupDefaultProps;\r\n\r\nexport default WordInfoGroup;\r\n","import React from 'react';\r\n\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport TooltipButton from 'components/TooltipButton';\r\nimport { noop } from 'utils';\r\nimport {\r\n\tCancelIcon,\r\n\tFavoriteIcon,\r\n\tGestureIcon,\r\n\tInfoIcon,\r\n\tMedalIcon,\r\n\tSpeakIcon,\r\n} from 'icons';\r\nimport { trySpeakNative } from 'utils/speech';\r\nimport { dropFromTheSky, wordActionGroupExit } from './transitions';\r\nimport ExtrasContainer from './ExtrasContainer';\r\nimport { wordActionGroupPropTypes, wordActionGroupDefaultProps } from './types';\r\n\r\nconst WordActionGroup = ({\r\n\t/** @type {HanziWriter} */\r\n\twriter,\r\n\tisParentHovering,\r\n\tisHovering,\r\n\ttheme,\r\n\tisFlipped,\r\n\tsetIsFlipped,\r\n\tisChallengeMode,\r\n\tsetIsChallengeMode,\r\n\tisFocusMode,\r\n\tonSetFocusMode,\r\n\tcardProps,\r\n}) => {\r\n\tconst { pinyin, hanzi } = cardProps;\r\n\r\n\tconst startQuiz = () => {\r\n\t\twriter.quiz({\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tstartQuiz();\r\n\t\t\t\t}, 1200);\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\tconst onSpeak = () => trySpeakNative(hanzi, pinyin);\r\n\tconst onMoreInfo = () => setIsFlipped(v => !v);\r\n\tconst onFocusMode = () => {\r\n\t\tif (isFocusMode) {\r\n\t\t\tonSetFocusMode(false);\r\n\t\t\twriter.cancelQuiz();\r\n\t\t\twriter.loopCharacterAnimation();\r\n\t\t} else {\r\n\t\t\tonSetFocusMode(true);\r\n\t\t\tif (isFlipped) setIsFlipped(false);\r\n\t\t\tstartQuiz();\r\n\t\t}\r\n\t};\r\n\tconst onHideOutline = () => {\r\n\t\tif (isChallengeMode) writer.showOutline();\r\n\t\telse writer.hideOutline();\r\n\t\tsetIsChallengeMode(!isChallengeMode);\r\n\t\tstartQuiz();\r\n\t};\r\n\r\n\tconst fallDistance = 200 - theme.spacing(3);\r\n\r\n\treturn (\r\n\t\t<AnimatePresence>\r\n\t\t\t{isHovering && (\r\n\t\t\t\t<ExtrasContainer\r\n\t\t\t\t\t$position=\"bottom\"\r\n\t\t\t\t\t$isParentHovering={isParentHovering}\r\n\t\t\t\t\t$isHovering={isHovering}\r\n\t\t\t\t\t{...dropFromTheSky(fallDistance)}\r\n\t\t\t\t\texit={wordActionGroupExit}\r\n\t\t\t\t>\r\n\t\t\t\t\t{(!isFocusMode && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<TooltipButton\r\n\t\t\t\t\t\t\t\ttooltip=\"Add to favorites - Coming Soon -\"\r\n\t\t\t\t\t\t\t\tonClick={noop}\r\n\t\t\t\t\t\t\t\ticon={FavoriteIcon}\r\n\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TooltipButton\r\n\t\t\t\t\t\t\t\ttooltip=\"Hear it\"\r\n\t\t\t\t\t\t\t\tonClick={onSpeak}\r\n\t\t\t\t\t\t\t\ticon={SpeakIcon}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TooltipButton\r\n\t\t\t\t\t\t\t\ttooltip=\"More Info\"\r\n\t\t\t\t\t\t\t\tonClick={onMoreInfo}\r\n\t\t\t\t\t\t\t\ticon={InfoIcon}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)) || (\r\n\t\t\t\t\t\t<TooltipButton\r\n\t\t\t\t\t\t\t{...(isChallengeMode && { bg: 'primary' })}\r\n\t\t\t\t\t\t\ttooltip={\r\n\t\t\t\t\t\t\t\t(isChallengeMode &&\r\n\t\t\t\t\t\t\t\t\t'Practice Mode (Shows Outline)') ||\r\n\t\t\t\t\t\t\t\t'Challenge Mode! (Hides Outline)'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={onHideOutline}\r\n\t\t\t\t\t\t\ticon={MedalIcon}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<TooltipButton\r\n\t\t\t\t\t\t{...(isFocusMode && { bg: 'primary' })}\r\n\t\t\t\t\t\ttooltip={\r\n\t\t\t\t\t\t\t(isFocusMode && 'Exit!') ||\r\n\t\t\t\t\t\t\t`Practice Writing. Use the mouse or your finger to draw.`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonClick={onFocusMode}\r\n\t\t\t\t\t\ticon={(isFocusMode && CancelIcon) || GestureIcon}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ExtrasContainer>\r\n\t\t\t)}\r\n\t\t</AnimatePresence>\r\n\t);\r\n};\r\n\r\nWordActionGroup.propTypes = wordActionGroupPropTypes;\r\nWordActionGroup.defaultProps = wordActionGroupDefaultProps;\r\n\r\nexport default WordActionGroup;\r\n","import styled from 'styled-components';\r\n\r\nimport TypographyWrapper from './TypographyWrapper';\r\n\r\nconst FocusModeInfoText = styled(TypographyWrapper)`\r\n\tposition: absolute;\r\n\ttop: -35px;\r\n\twidth: 100%;\r\n\ttext-align: center;\r\n\tfont-size: 0.6rem;\r\n`;\r\n\r\nexport default FocusModeInfoText;\r\n","import styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport ForwardingDiv from 'components/ForwardingDiv';\r\n\r\nconst CardInnerContainerFront = styled(motion.custom(ForwardingDiv))`\r\n\tbackface-visibility: hidden;\r\n\tposition: relative;\r\n`;\r\n\r\nexport default CardInnerContainerFront;\r\n","import styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport ForwardingDiv from 'components/ForwardingDiv';\r\n\r\nconst CardInnerContainerBack = styled(motion.custom(ForwardingDiv))`\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tposition: absolute;\r\n\tbackface-visibility: hidden;\r\n\toverflow: auto;\r\n\t${({ theme, $isFlipped }) => `\r\n\t\tpadding: ${theme.spacing(1)}px 0;\r\n\t\tdisplay: ${($isFlipped && 'flex') || 'none'}\r\n\t`}\r\n`;\r\n\r\nexport default CardInnerContainerBack;\r\n","import React, { useState } from 'react';\r\nimport { useTheme } from '@material-ui/core';\r\n\r\nimport useHanzi from 'components/Hanzi/useHanzi';\r\nimport useOuterClick from 'hooks/useOuterClick';\r\nimport { START_MODES } from 'components/Hanzi/constants';\r\nimport { CARD_BASE_SIZE, CARD_FOCUS_MODE_SIZE } from './constants';\r\nimport {\r\n\tcardAnimationVariants,\r\n\tcardInnerContainerFrontAnimationVariants,\r\n\tcardInnerContainerBackAnimationVariants,\r\n} from './transitions';\r\nimport { cardPropTypes, cardDefaultProps } from './types';\r\nimport CardPlaceholder from './CardPlaceholder';\r\nimport CardWrapper from './CardWrapper';\r\nimport CardContainer from './CardContainer';\r\nimport MoreInfoContainer from './MoreInfoContainer';\r\nimport WordInfoGroup from './WordInfoGroup';\r\nimport WordActionGroup from './WordActionGroup';\r\nimport FocusModeInfoText from './FocusModeInfoText';\r\nimport CardInnerContainerFront from './CardInnerContainerFront';\r\nimport CardInnerContainerBack from './CardInnerContainerBack';\r\n\r\nconst Card = ({\r\n\ttext,\r\n\tisParentHovering,\r\n\tisChildInFocusMode,\r\n\tsetIsChildInFocusMode,\r\n\tsmAndDown,\r\n\t...cardProps\r\n}) => {\r\n\tconst theme = useTheme();\r\n\tconst { hanzi, writer, rewrite } = useHanzi(text);\r\n\r\n\tconst [isHovering, setIsHovering] = useState(false);\r\n\tconst [isFlipped, setIsFlipped] = useState(false);\r\n\tconst [isFocusMode, setIsFocusMode] = useState(false);\r\n\r\n\tconst onSetFocusMode = v => {\r\n\t\trewrite(text, {\r\n\t\t\tsize: (v && CARD_FOCUS_MODE_SIZE) || CARD_BASE_SIZE,\r\n\t\t\tstartMode: (v && START_MODES.QUIZ) || START_MODES.LOOP,\r\n\t\t});\r\n\t\tsetIsChildInFocusMode(v);\r\n\t\tsetIsFocusMode(v);\r\n\t};\r\n\tconst [isChallengeMode, setIsChallengeMode] = useState(false);\r\n\r\n\t// Close open cards when when clicked elsewhere\r\n\tconst currentCard = useOuterClick(() => {\r\n\t\t// We are only concerned with this on mobile\r\n\t\tif (!smAndDown) return;\r\n\r\n\t\t// If we are in focus mode, ignore it\r\n\t\tif (isChildInFocusMode) return;\r\n\r\n\t\t// Else if the card is not hovered anyway, don't touch it\r\n\t\tif (!isHovering) return;\r\n\r\n\t\t// Onl the cards that are open when we click outside should close\r\n\t\tsetIsHovering(false);\r\n\t});\r\n\r\n\t// Focus mode overrides the hovering\r\n\t// If it's in focus mode but it's not this child, don't allow hover\r\n\tlet _isHovering = isHovering;\r\n\tif (isChildInFocusMode) _isHovering = isFocusMode;\r\n\r\n\tconst _isParentHovering = isParentHovering;\r\n\r\n\tconst animate = (isFocusMode && 'isFocusMode') || [\r\n\t\t(_isParentHovering && 'isParentHovering') || 'isParentNotHovering',\r\n\t\t(_isParentHovering && _isHovering && 'isHovering') || 'isNotHovering',\r\n\t];\r\n\r\n\tconst onClick = () => {\r\n\t\tif (isFocusMode) return;\r\n\r\n\t\t// eslint-disable-next-line no-unused-expressions\r\n\t\tcurrentCard.current?.scrollIntoView({\r\n\t\t\tblock: 'center',\r\n\t\t\tbehavior: 'smooth',\r\n\t\t\t// inline: 'end',\r\n\t\t});\r\n\t\tsetIsHovering(!_isHovering);\r\n\t};\r\n\r\n\tconst onTapCancel = () => {\r\n\t\tif (isFocusMode) return;\r\n\t\tsetIsHovering(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<CardPlaceholder\r\n\t\t\tref={currentCard}\r\n\t\t\tlayout\r\n\t\t\tinitial={false}\r\n\t\t\tcustom={theme}\r\n\t\t\tvariants={cardAnimationVariants}\r\n\t\t\tanimate={animate}\r\n\t\t\t$isParentHovering={_isParentHovering}\r\n\t\t\t$isFocusMode={isFocusMode}\r\n\t\t\tonHoverStart={() => {\r\n\t\t\t\tsetIsHovering(true);\r\n\t\t\t}}\r\n\t\t\tonHoverEnd={() => {\r\n\t\t\t\tsetIsHovering(false);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<CardWrapper layout $isParentHovering={_isParentHovering}>\r\n\t\t\t\t{writer && (\r\n\t\t\t\t\t<WordInfoGroup\r\n\t\t\t\t\t\ttheme={theme}\r\n\t\t\t\t\t\tisParentHovering={isParentHovering}\r\n\t\t\t\t\t\tisHovering={_isHovering}\r\n\t\t\t\t\t\tvisible\r\n\t\t\t\t\t\tcardProps={cardProps}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<CardContainer>\r\n\t\t\t\t\t<CardInnerContainerFront\r\n\t\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\t\tonTapCancel={onTapCancel}\r\n\t\t\t\t\t\tvariants={cardInnerContainerFrontAnimationVariants}\r\n\t\t\t\t\t\tanimate={[\r\n\t\t\t\t\t\t\t(isFlipped && 'isFlipped') || 'isNotFlipped',\r\n\t\t\t\t\t\t\t(isFocusMode && 'isFocusMode') || 'isNotFocusMode',\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{isFocusMode && (\r\n\t\t\t\t\t\t\t<FocusModeInfoText>\r\n\t\t\t\t\t\t\t\tPractice writing using your mouse or finger\r\n\t\t\t\t\t\t\t</FocusModeInfoText>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{hanzi}\r\n\t\t\t\t\t</CardInnerContainerFront>\r\n\t\t\t\t\t<CardInnerContainerBack\r\n\t\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\t\tonTapCancel={onTapCancel}\r\n\t\t\t\t\t\t$isFlipped={isFlipped}\r\n\t\t\t\t\t\tvariants={cardInnerContainerBackAnimationVariants}\r\n\t\t\t\t\t\tanimate={(isFlipped && 'isFlipped') || 'isNotFlipped'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MoreInfoContainer\r\n\t\t\t\t\t\t\tisVisible={isFlipped}\r\n\t\t\t\t\t\t\t{...cardProps}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</CardInnerContainerBack>\r\n\t\t\t\t</CardContainer>\r\n\t\t\t\t{writer && (\r\n\t\t\t\t\t<WordActionGroup\r\n\t\t\t\t\t\twriter={writer}\r\n\t\t\t\t\t\tisParentHovering={isParentHovering}\r\n\t\t\t\t\t\tisHovering={_isHovering}\r\n\t\t\t\t\t\ttheme={theme}\r\n\t\t\t\t\t\tisFlipped={isFlipped}\r\n\t\t\t\t\t\tsetIsFlipped={setIsFlipped}\r\n\t\t\t\t\t\tisFocusMode={isFocusMode}\r\n\t\t\t\t\t\tonSetFocusMode={onSetFocusMode}\r\n\t\t\t\t\t\tisChallengeMode={isChallengeMode}\r\n\t\t\t\t\t\tsetIsChallengeMode={setIsChallengeMode}\r\n\t\t\t\t\t\tcardProps={cardProps}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</CardWrapper>\r\n\t\t</CardPlaceholder>\r\n\t);\r\n};\r\n\r\nCard.propTypes = cardPropTypes;\r\nCard.defaultProps = cardDefaultProps;\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\n\r\nconst FocusModeWrapper = styled.div`\r\n\tposition: fixed;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: black;\r\n\tz-index: 2;\r\n\ttop: 0px;\r\n\tleft: 0px;\r\n\ttransform-origin: 50% 50% 0px;\r\n`;\r\n\r\nexport default FocusModeWrapper;\r\n","import React, { useState } from 'react';\r\nimport { useMediaQuery } from '@material-ui/core';\r\n\r\nimport ContainerWithCenteredItems from 'components/ContainerWithCenteredItems';\r\nimport Card from 'containers/Learn/CardGrid/Card';\r\nimport { propTypes, defaultProps } from './types';\r\nimport FocusModeWrapper from './FocusModeWrapper';\r\n\r\nconst CardGrid = ({ cards }) => {\r\n\tconst smAndDown = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n\r\n\tconst [isChildInFocusMode, setIsChildInFocusMode] = useState(false);\r\n\tconst [isHovering, setIsHovering] = useState(false);\r\n\tconst onEnter = () => {\r\n\t\tif (smAndDown) return;\r\n\t\tsetIsHovering(true);\r\n\t};\r\n\tconst onLeave = () => {\r\n\t\tif (isChildInFocusMode) return;\r\n\t\tsetIsHovering(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ContainerWithCenteredItems\r\n\t\t\tonMouseEnter={onEnter}\r\n\t\t\tonMouseLeave={onLeave}\r\n\t\t>\r\n\t\t\t{isChildInFocusMode && <FocusModeWrapper />}\r\n\t\t\t{cards.map(card => (\r\n\t\t\t\t<Card\r\n\t\t\t\t\tisParentHovering={smAndDown || isHovering}\r\n\t\t\t\t\tkey={card.id}\r\n\t\t\t\t\tisChildInFocusMode={isChildInFocusMode}\r\n\t\t\t\t\tsetIsChildInFocusMode={setIsChildInFocusMode}\r\n\t\t\t\t\tsmAndDown={smAndDown}\r\n\t\t\t\t\t{...card}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ContainerWithCenteredItems>\r\n\t);\r\n};\r\n\r\nCardGrid.propTypes = propTypes;\r\nCardGrid.defaultProps = defaultProps;\r\n\r\nexport default CardGrid;\r\n"],"sourceRoot":""}