{"version":3,"sources":["../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","routes/pages/Analytics.js","components/ContainerWithCenteredItems/types.js","components/ContainerWithCenteredItems/ContainerWithCenteredItems.js","components/Spacer/StyledWrapper.js","components/Spacer/Spacer.js","components/Spacer/types.js","store/firebase/hooks/useSearchQueries.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/isValueSelected.js","../node_modules/@material-ui/lab/esm/ToggleButtonGroup/ToggleButtonGroup.js","../node_modules/@material-ui/lab/esm/ToggleButton/ToggleButton.js","components/Toggle/types.js","components/Toggle/Toggle.js"],"names":["createSvgIcon","React","d","Avatar","props","ref","alt","childrenProp","children","classes","className","_props$component","component","Component","imgProps","sizes","src","srcSet","_props$variant","variant","other","_objectWithoutProperties","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","_extends","img","Person","fallback","clsx","root","system","colorDefault","withStyles","theme","position","display","alignItems","justifyContent","flexShrink","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","color","palette","background","default","backgroundColor","type","grey","circle","rounded","shape","square","textAlign","objectFit","textIndent","name","StyledContainerWithCenteredItems","styled","ContainerWithCenteredItems","StyledToggle","Toggle","spacing","StyledAvatar","getOptions","smAndDown","toggle","isCharacter","enableTooltip","deterministic","fontSizes","padding","rotations","rotationAngles","scale","spiral","transitionDuration","Wrapper","useState","setComponent","useLocalStorage","setToggle","words","setWords","collection","useSearchQueries","useMediaQuery","breakpoints","down","characters","counts","setCounts","useEffect","a","RWC","loadReactWordCloud","length","map","c","query","keyword","join","getCount","normalizedCollection","_collection","split","reduce","acc","char","value","text","Object","values","normalizeCollection","PageContainer","onChange","options","label","icon","LoadingIndicator","Analytics","traceId","node","isRequired","bool","StyledGrid","Grid","$horizontal","$vertical","horizontal","vertical","rest","defaultProps","StyledWrapper","span","$direction","$spacing","Spacer","direction","numberOrString","parseInt","useIsAnalyticsEnabled","analyticsIsEnabled","useFirestore","useFirestoreCollectionData","orderBy","add","createdOn","Date","isValueSelected","candidate","undefined","Array","isArray","indexOf","ToggleButtonGroup","_props$exclusive","exclusive","_props$orientation","orientation","_props$size","size","handleChange","event","buttonValue","newValue","index","slice","splice","concat","handleExclusiveChange","role","child","grouped","capitalize","selected","flexDirection","groupedHorizontal","marginLeft","borderLeft","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","groupedVertical","marginTop","borderTop","ToggleButton","_props$disabled","disabled","_props$disableFocusRi","disableFocusRipple","onClick","ButtonBase","focusRipple","isDefaultPrevented","button","boxSizing","border","fade","action","textDecoration","primary","sizeSmall","sizeLarge","toggleOptionItemType","any","string","toggleOptionsType","arrayOf","func","_","doesNotExist","elm","getElementFromElementOrType"],"mappings":"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","file":"static/js/16.89caf239.chunk.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: PropTypes.oneOf(['circle', 'rounded', 'square'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import React, { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { SuspenseWithPerf } from 'reactfire';\r\nimport { Avatar, useMediaQuery } from '@material-ui/core';\r\n\r\nimport LoadingIndicator from 'components/LoadingIndicator';\r\nimport useSearchQueries from 'store/firebase/hooks/useSearchQueries';\r\nimport ContainerWithCenteredItems from 'components/ContainerWithCenteredItems';\r\nimport Toggle from 'components/Toggle';\r\nimport useLocalStorage from 'hooks/useLocalStorage';\r\nimport PageContainer from '../PageContainer';\r\n\r\nconst StyledContainerWithCenteredItems = styled(ContainerWithCenteredItems)`\r\n\theight: 95%;\r\n`;\r\n\r\n// Prevents the annoying full-screen size tooltip before the\r\n// word-cloud loads\r\nconst StyledToggle = styled(Toggle)`\r\n\t${({ theme }) => `\r\n\t\tmax-height: ${theme.spacing(6)}px;\r\n\t`}\r\n`;\r\n\r\nconst StyledAvatar = styled(Avatar)`\r\n\tfont-weight: 600;\r\n\t${({ theme }) => `\r\n\t\twidth: ${theme.spacing(4)}px;\r\n    \theight: ${theme.spacing(4)}px;\r\n\t\tfont-size: ${theme.spacing(4) / 2.5}px;\r\n\t`}\r\n`;\r\n\r\nconst getOptions = (smAndDown, toggle) => {\r\n\tconst isCharacter = toggle === 'character';\r\n\tconst fontSizes = smAndDown\r\n\t\t? [20, (isCharacter && 80) || 40]\r\n\t\t: [50, (isCharacter && 150) || 80];\r\n\treturn {\r\n\t\tenableTooltip: true,\r\n\t\tdeterministic: false,\r\n\t\tfontSizes,\r\n\t\tpadding: 1,\r\n\t\trotations: 3,\r\n\t\trotationAngles: [-15, 15],\r\n\t\tscale: 'sqrt',\r\n\t\tspiral: 'archimedean',\r\n\t\ttransitionDuration: 1000,\r\n\t};\r\n};\r\n\r\nconst normalizeCollection = (collection, type = 'character') => {\r\n\tif (!collection) return [];\r\n\t// TODO: I don't know why but I apparently renamed the key from\r\n\t// \"keyword\" to \"query\". Once I fix the keys in firebase, I will\r\n\t// update this\r\n\tlet _collection = collection.map(c => c.query || c.keyword);\r\n\tif (type === 'character') {\r\n\t\t_collection = _collection.join('').split('');\r\n\t}\r\n\t_collection = _collection.reduce((acc, char) => {\r\n\t\tif (!acc[char]) acc[char] = { value: 1 };\r\n\t\tacc[char].text = char;\r\n\t\tacc[char].value++;\r\n\t\treturn acc;\r\n\t}, {});\r\n\r\n\treturn Object.values(_collection);\r\n};\r\n\r\nconst getCount = collection => ({\r\n\twords: collection.length,\r\n\t// TODO: I don't know why but I apparently renamed the key from\r\n\t// \"keyword\" to \"query\". Once I fix the keys in firebase, I will\r\n\t// update this\r\n\tcharacters: collection.map(c => c.query || c.keyword).join('').length,\r\n});\r\n\r\nconst ANALYTICS_TYPE_LOCAL_STORAGE_KEY = 'analyticsType';\r\nconst Wrapper = () => {\r\n\tconst [Component, setComponent] = useState(null);\r\n\tconst [toggle, setToggle] = useLocalStorage(\r\n\t\tANALYTICS_TYPE_LOCAL_STORAGE_KEY,\r\n\t\t'character'\r\n\t);\r\n\tconst [words, setWords] = useState([]);\r\n\tconst { collection } = useSearchQueries();\r\n\tconst smAndDown = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n\tconst [counts, setCounts] = useState({ words: 0, characters: 0 });\r\n\r\n\tuseEffect(() => {\r\n\t\tconst loadReactWordCloud = async () => {\r\n\t\t\tconst { default: RWC } = await import('react-wordcloud');\r\n\t\t\tawait import('tippy.js/dist/tippy.css');\r\n\t\t\tawait import('tippy.js/animations/scale.css');\r\n\r\n\t\t\tsetComponent(() => RWC);\r\n\t\t};\r\n\t\tloadReactWordCloud();\r\n\t}, []);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCounts(getCount(collection));\r\n\t\tconst normalizedCollection = normalizeCollection(collection, toggle);\r\n\t\tsetWords(normalizedCollection);\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, [toggle]);\r\n\r\n\treturn (\r\n\t\t<PageContainer>\r\n\t\t\t<StyledContainerWithCenteredItems>\r\n\t\t\t\t<StyledToggle\r\n\t\t\t\t\tvalue={toggle}\r\n\t\t\t\t\tonChange={setToggle}\r\n\t\t\t\t\toptions={[\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvalue: 'character',\r\n\t\t\t\t\t\t\tlabel: 'Characters',\r\n\t\t\t\t\t\t\ticon: (\r\n\t\t\t\t\t\t\t\t<StyledAvatar>{counts.characters}</StyledAvatar>\r\n\t\t\t\t\t\t\t),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tvalue: 'word',\r\n\t\t\t\t\t\t\tlabel: 'Words',\r\n\t\t\t\t\t\t\ticon: <StyledAvatar>{counts.words}</StyledAvatar>,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t]}\r\n\t\t\t\t/>\r\n\t\t\t\t{((!collection || !Component) && <LoadingIndicator />) || (\r\n\t\t\t\t\t<Component\r\n\t\t\t\t\t\toptions={getOptions(smAndDown, toggle)}\r\n\t\t\t\t\t\twords={words}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</StyledContainerWithCenteredItems>\r\n\t\t</PageContainer>\r\n\t);\r\n};\r\n\r\nconst Analytics = () => (\r\n\t<SuspenseWithPerf fallback={<LoadingIndicator />} traceId=\"load-analytics\">\r\n\t\t<Wrapper />\r\n\t</SuspenseWithPerf>\r\n);\r\n\r\nexport default Analytics;\r\n","import { bool, node } from 'prop-types';\r\n\r\nconst propTypes = {\r\n\tchildren: node.isRequired,\r\n\thorizontal: bool,\r\n\tvertical: bool,\r\n};\r\n\r\nconst defaultProps = {\r\n\thorizontal: true,\r\n\tvertical: false,\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nimport { propTypes, defaultProps } from './types';\r\n\r\nconst StyledGrid = styled(Grid)`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\t${({ $horizontal, $vertical }) => `\r\n\t\t${$horizontal && 'justify-content: center;'}\r\n\t\t${$vertical && 'height: 100%; align-items: center;'}\r\n\t`}\r\n`;\r\n\r\n/**\r\n * Centered Grid\r\n *\r\n * @component\r\n * @param {import('@material-ui/core').GridProps|import('react').HtmlHTMLAttributes}\r\n */\r\nconst ContainerWithCenteredItems = ({\r\n\tchildren,\r\n\thorizontal,\r\n\tvertical,\r\n\t...rest\r\n}) => (\r\n\t<StyledGrid $horizontal={horizontal} $vertical={vertical} {...rest}>\r\n\t\t{children}\r\n\t</StyledGrid>\r\n);\r\n\r\nContainerWithCenteredItems.propTypes = propTypes;\r\nContainerWithCenteredItems.defaultProps = defaultProps;\r\n\r\nexport default ContainerWithCenteredItems;\r\n","import styled from 'styled-components';\r\n\r\nconst StyledWrapper = styled.span`\r\n\tdisplay: block;\r\n\twidth: 100%;\r\n\t${({ theme, $direction, $spacing }) => `\r\n\t\tmargin-${$direction}: ${theme.spacing($spacing)}px;\r\n\t`}\r\n`;\r\n\r\nexport default StyledWrapper;\r\n","import React from 'react';\r\nimport StyledWrapper from './StyledWrapper';\r\nimport { defaultProps, propTypes } from './types';\r\n\r\n/**\r\n * Element that adds margin to the given direction based on the\r\n * spacing amount. The amount is passed in to the spacing method\r\n * of Mui. By default 1-unit-spacing = 8px\r\n *\r\n * @example\r\n * ```js\r\n * <Spacer direction=\"right\" spacing=\"5\" />\r\n * ```\r\n *\r\n * @component\r\n */\r\nconst Spacer = ({ direction, spacing }) => (\r\n\t<StyledWrapper\r\n\t\t$direction={direction}\r\n\t\t$spacing={\r\n\t\t\t(typeof spacing === 'string' && parseInt(spacing, 10)) || spacing\r\n\t\t}\r\n\t/>\r\n);\r\n\r\nSpacer.propTypes = propTypes;\r\nSpacer.defaultProps = defaultProps;\r\n\r\nexport default Spacer;\r\n","import { direction, numberOrString } from 'components/types';\r\n\r\nconst propTypes = {\r\n\t/**\r\n\t * - Which direction do you want to apply margin to\r\n\t */\r\n\tdirection: direction.isRequired,\r\n\t/**\r\n\t * - The amount is passed in to the spacing method of Mui.\r\n\t * - By default 1-unit-spacing = 8px\r\n\t */\r\n\tspacing: numberOrString,\r\n};\r\nconst defaultProps = {\r\n\tspacing: 1,\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import { useFirestore, useFirestoreCollectionData } from 'reactfire';\r\n\r\nimport useIsAnalyticsEnabled from 'hooks/useIsAnalyticsEnabled';\r\n\r\nconst useSearchQueries = () => {\r\n\tconst [analyticsIsEnabled] = useIsAnalyticsEnabled();\r\n\tconst ref = useFirestore().collection('searchQueries');\r\n\tconst collection = useFirestoreCollectionData(ref.orderBy('createdOn'));\r\n\r\n\tconst add = query => {\r\n\t\tif (!analyticsIsEnabled) return;\r\n\r\n\t\tref.add({\r\n\t\t\tquery,\r\n\t\t\tcreatedOn: new Date(),\r\n\t\t});\r\n\t};\r\n\r\n\treturn { collection, add };\r\n};\r\n\r\nexport default useSearchQueries;\r\n","// Determine if the toggle button value matches, or is contained in, the\n// candidate group value.\nexport default function isValueSelected(value, candidate) {\n  if (candidate === undefined || value === undefined) {\n    return false;\n  }\n\n  if (Array.isArray(candidate)) {\n    return candidate.indexOf(value) >= 0;\n  }\n\n  return value === candidate;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport isValueSelected from './isValueSelected';\nimport { withStyles } from '@material-ui/core/styles';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-flex',\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `orientation=\"vertical\"`. */\n    vertical: {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the children. */\n    grouped: {},\n\n    /* Styles applied to the children if `orientation=\"horizontal\"`. */\n    groupedHorizontal: {\n      '&:not(:first-child)': {\n        marginLeft: -1,\n        borderLeft: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderBottomLeftRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderTopRightRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    },\n\n    /* Styles applied to the children if `orientation=\"vertical\"`. */\n    groupedVertical: {\n      '&:not(:first-child)': {\n        marginTop: -1,\n        borderTop: '1px solid transparent',\n        borderTopLeftRadius: 0,\n        borderTopRightRadius: 0\n      },\n      '&:not(:last-child)': {\n        borderBottomLeftRadius: 0,\n        borderBottomRightRadius: 0\n      }\n    }\n  };\n};\nvar ToggleButtonGroup = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$exclusive = props.exclusive,\n      exclusive = _props$exclusive === void 0 ? false : _props$exclusive,\n      onChange = props.onChange,\n      _props$orientation = props.orientation,\n      orientation = _props$orientation === void 0 ? 'horizontal' : _props$orientation,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"exclusive\", \"onChange\", \"orientation\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    var index = value && value.indexOf(buttonValue);\n    var newValue;\n\n    if (value && index >= 0) {\n      newValue = value.slice();\n      newValue.splice(index, 1);\n    } else {\n      newValue = value ? value.concat(buttonValue) : [buttonValue];\n    }\n\n    onChange(event, newValue);\n  };\n\n  var handleExclusiveChange = function handleExclusiveChange(event, buttonValue) {\n    if (!onChange) {\n      return;\n    }\n\n    onChange(event, value === buttonValue ? null : buttonValue);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    role: \"group\",\n    className: clsx(classes.root, className, orientation === 'vertical' && classes.vertical),\n    ref: ref\n  }, other), React.Children.map(children, function (child) {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The ToggleButtonGroup component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      className: clsx(classes.grouped, classes[\"grouped\".concat(capitalize(orientation))], child.props.className),\n      onChange: exclusive ? handleExclusiveChange : handleChange,\n      selected: child.props.selected === undefined ? isValueSelected(child.props.value, value) : child.props.selected,\n      size: child.props.size || size\n    });\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButtonGroup.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, only allow one of the child ToggleButton values to be selected.\n   */\n  exclusive: PropTypes.bool,\n\n  /**\n   * Callback fired when the value changes.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {any} value of the selected buttons. When `exclusive` is true\n   * this is a single value; when false an array of selected values. If no value\n   * is selected and `exclusive` is true the value is null; when false an empty array.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The group orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']),\n\n  /**\n   * The size of the buttons.\n   */\n  size: PropTypes.oneOf(['large', 'medium', 'small']),\n\n  /**\n   * The currently selected value within the group or an array of selected\n   * values when `exclusive` is false.\n   *\n   * The value must have reference equality with the option in order to be selected.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButtonGroup'\n})(ToggleButtonGroup);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n// @inheritedComponent ButtonBase\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { fade, withStyles } from '@material-ui/core/styles';\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport { capitalize } from '@material-ui/core/utils';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      borderRadius: theme.shape.borderRadius,\n      padding: 11,\n      border: \"1px solid \".concat(fade(theme.palette.action.active, 0.12)),\n      color: fade(theme.palette.action.active, 0.38),\n      '&$selected': {\n        color: theme.palette.action.active,\n        backgroundColor: fade(theme.palette.action.active, 0.12),\n        '&:hover': {\n          backgroundColor: fade(theme.palette.action.active, 0.15)\n        },\n        '& + &': {\n          borderLeft: 0,\n          marginLeft: 0\n        }\n      },\n      '&$disabled': {\n        color: fade(theme.palette.action.disabled, 0.12)\n      },\n      '&:hover': {\n        textDecoration: 'none',\n        // Reset on mouse devices\n        backgroundColor: fade(theme.palette.text.primary, 0.05),\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      }\n    }),\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Pseudo-class applied to the root element if `selected={true}`. */\n    selected: {},\n\n    /* Styles applied to the `label` wrapper element. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {\n      padding: 7,\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {\n      padding: 15,\n      fontSize: theme.typography.pxToRem(15)\n    }\n  };\n};\nvar ToggleButton = /*#__PURE__*/React.forwardRef(function ToggleButton(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      onChange = props.onChange,\n      onClick = props.onClick,\n      selected = props.selected,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      value = props.value,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disabled\", \"disableFocusRipple\", \"onChange\", \"onClick\", \"selected\", \"size\", \"value\"]);\n\n  var handleChange = function handleChange(event) {\n    if (onClick) {\n      onClick(event, value);\n\n      if (event.isDefaultPrevented()) {\n        return;\n      }\n    }\n\n    if (onChange) {\n      onChange(event, value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, className, disabled && classes.disabled, selected && classes.selected, size !== 'medium' && classes[\"size\".concat(capitalize(size))]),\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    ref: ref,\n    onClick: handleChange,\n    onChange: onChange,\n    value: value,\n    \"aria-pressed\": selected\n  }, other), /*#__PURE__*/React.createElement(\"span\", {\n    className: classes.label\n  }, children));\n});\nprocess.env.NODE_ENV !== \"production\" ? ToggleButton.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * If `true`, the button will be rendered in an active state.\n   */\n  selected: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * The value to associate with the button when selected in a\n   * ToggleButtonGroup.\n   */\n  value: PropTypes.any.isRequired\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiToggleButton'\n})(ToggleButton);","import { shape, string, bool, arrayOf, func, any } from 'prop-types';\r\n\r\nimport { icon, size } from 'components/types';\r\n\r\nconst toggleOptionItemType = shape({\r\n\t// eslint-disable-next-line react/forbid-prop-types\r\n\tvalue: any.isRequired,\r\n\tlabel: string.isRequired,\r\n\ticon,\r\n\tdisabled: bool,\r\n}).isRequired;\r\n\r\nconst toggleOptionsType = arrayOf(toggleOptionItemType);\r\n\r\nconst propTypes = {\r\n\tvalue: any.isRequired,\r\n\tonChange: func.isRequired,\r\n\t/**\r\n\t * - [\r\n\t *     {\r\n\t *         value: 'dark',\r\n\t *         label: 'Dark',\r\n\t *         icon: <DarkThemeIcon color=\"primary\" />,\r\n\t *     },\r\n\t *     {\r\n\t *         value: 'light',\r\n\t *         label: 'Light',\r\n\t *         icon: <LightThemeIcon style={{ color: yellow[500] }} />,\r\n\t *     },\r\n\t * ]\r\n\t */\r\n\toptions: toggleOptionsType.isRequired,\r\n\texclusive: bool,\r\n\tsize,\r\n};\r\n\r\nconst defaultProps = {\r\n\texclusive: true,\r\n\tsize: 'small',\r\n};\r\n\r\nexport { toggleOptionItemType, toggleOptionsType, propTypes, defaultProps };\r\n","import React from 'react';\r\nimport { ToggleButton, ToggleButtonGroup } from '@material-ui/lab';\r\n\r\nimport Spacer from 'components/Spacer';\r\nimport { getElementFromElementOrType } from 'utils/react';\r\nimport { doesNotExist } from 'utils';\r\nimport { propTypes, defaultProps } from './types';\r\n\r\n/**\r\n * Toggle for a button groups.\r\n *\r\n * @example\r\n * ```js\r\n * <Toggle\r\n * \tvalue={theme}\r\n * \tonChange={setTheme}\r\n * \toptions={[\r\n * \t\t{\r\n * \t\t\tvalue: 'dark',\r\n * \t\t\tlabel: 'Dark',\r\n * \t\t\ticon: <DarkThemeIcon color=\"primary\" />,\r\n * \t\t},\r\n * \t\t{\r\n * \t\t\tvalue: 'light',\r\n * \t\t\tlabel: 'Light',\r\n * \t\t\ticon: <LightThemeIcon style={{ color: yellow[500] }} />,\r\n * \t\t},\r\n * \t]}\r\n * />\r\n * ```\r\n *\r\n * @component\r\n * @param {...(import('@material-ui/lab').ToggleButtonGroupProps)}\r\n */\r\nconst Toggle = ({ value, onChange, options, size, ...rest }) => {\r\n\tconst handleOnChange = (_, newValue) => {\r\n\t\tif (doesNotExist(newValue) || value === newValue) return;\r\n\t\tonChange(newValue);\r\n\t};\r\n\treturn (\r\n\t\t<ToggleButtonGroup value={value} onChange={handleOnChange} {...rest}>\r\n\t\t\t{options.map(elm => (\r\n\t\t\t\t<ToggleButton\r\n\t\t\t\t\tvalue={elm.value}\r\n\t\t\t\t\tkey={elm.value}\r\n\t\t\t\t\tdisabled={elm.disabled}\r\n\t\t\t\t\tsize={size}\r\n\t\t\t\t>\r\n\t\t\t\t\t{elm.icon && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t{getElementFromElementOrType(elm.icon)}\r\n\t\t\t\t\t\t\t<Spacer direction=\"right\" />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{elm.label}\r\n\t\t\t\t</ToggleButton>\r\n\t\t\t))}\r\n\t\t</ToggleButtonGroup>\r\n\t);\r\n};\r\n\r\nToggle.propTypes = propTypes;\r\nToggle.defaultProps = defaultProps;\r\n\r\nexport default Toggle;\r\n"],"sourceRoot":""}