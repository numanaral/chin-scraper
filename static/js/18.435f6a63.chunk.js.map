{"version":3,"sources":["components/Hanzi/constants.js","components/Hanzi/types.js","components/Hanzi/Background/Plain.js","components/Hanzi/Background/types.js","components/Hanzi/Background/RiceGrid.js","components/Hanzi/Background/Background.js","components/Hanzi/Hanzi.js","components/Hanzi/useHanzi.js","hooks/useOuterClick.js","containers/Learn/CardGrid/Card/transitions.js","containers/Learn/CardGrid/Card/constants.js","containers/Learn/CardGrid/types.js","containers/Learn/CardGrid/Card/types.js","components/ForwardingDiv/types.js","components/ForwardingDiv/ForwardingDiv.js","containers/Learn/CardGrid/Card/CardPlaceholder.js","containers/Learn/CardGrid/Card/CardWrapper.js","containers/Learn/CardGrid/Card/CardContainer.js","containers/Learn/CardGrid/Card/MoreInfoContainer/types.js","containers/Learn/CardGrid/Card/TypographyWrapper.js","containers/Learn/CardGrid/Card/MoreInfoContainer/DetailTitle.js","containers/Learn/CardGrid/Card/MoreInfoContainer/DetailGroupBody.js","containers/Learn/CardGrid/Card/MoreInfoContainer/Details.js","containers/Learn/CardGrid/Card/MoreInfoContainer/MoreInfoContainer.js","containers/Learn/CardGrid/Card/ExtrasContainer.js","containers/Learn/CardGrid/Card/WordInfoGroup.js","utils/dom.js","api/proxyApi.js","api/hanziTrainerProApi.js","containers/Learn/CardGrid/Card/WordActionGroup.js","containers/Learn/CardGrid/Card/FocusModeInfoText.js","containers/Learn/CardGrid/Card/CardInnerContainerFront.js","containers/Learn/CardGrid/Card/CardInnerContainerBack.js","containers/Learn/CardGrid/Card/Card.js","containers/Learn/CardGrid/FocusModeWrapper.js","containers/Learn/CardGrid/CardGrid.js"],"names":["getDefaultHanziWriterOptions","theme","width","height","padding","strokeColor","palette","primary","main","radicalColor","success","delayBetweenStrokes","delayBetweenLoops","drawingColor","text","START_MODES","LOOP","DRAW_ONCE","QUIZ","QUIZ_CHALLENGE","QUIZ_CHALLENGE_HIGHLIGHT_ONCE","DEFAULT_OPTIONS","size","hanziWriterOptions","riceGrid","startMode","propTypes","innerRef","refType","isRequired","numberOrString","bool","Plain","memo","forwardRef","props","ref","defaultProps","string","color","opacity","RiceGrid","StyledLine","stroke","strokeOpacity","xmlns","x1","y1","x2","y2","Background","rest","Bg","Hanzi","useHanzi","character","options","useState","bgSize","setBgSize","writer","setWriter","useTheme","charRef","useRef","writeHanzi","newCharacter","newOptions","_options","showOutline","showCharacter","current","querySelectorAll","forEach","e","remove","hanziWriter","HanziWriter","create","recursiveQuiz","quiz","onComplete","setTimeout","loopCharacterAnimation","useEffect","hanzi","rewrite","require","useOuterClick","cb","callbackRef","handleClick","contains","target","document","addEventListener","removeEventListener","dropFromTheSky","distance","reverse","initial","y","pointerEvents","animate","spring","type","stiffness","duration","easeOut","ease","cardAnimationVariants","isFocusMode","scale","isHovering","rotate","zIndex","isNotHovering","isParentHovering","margin","spacing","marginBottom","borderRadius","shape","transition","isParentNotHovering","cardInnerContainerFrontAnimationVariants","isFlipped","rotateY","isNotFlipped","isNotFocusMode","cardInnerContainerBackAnimationVariants","wordActionGroupExit","overflow","cardProps","id","translation","pinyin","cardType","arrayOf","object","func","className","component","elementType","ForwardingDiv","div","CardPlaceholder","styled","motion","custom","$isParentHovering","$isFocusMode","smAndDown","useMediaQuery","t","breakpoints","down","topNavbarDiff","bottomNavbarDiff","footerDiff","background","level1","shadows","CardWrapper","CardContainer","moreInfoContainerPropTypes","oneOfType","array","node","details","TypographyWrapper","isKey","Typography","variant","DetailTitle","children","firstCapital","DetailGroupBody","body","Array","isArray","map","Object","keys","key","pascalToSentence","Details","title","Divider","MoreInfoContainer","Box","p","ExtrasContainer","$position","$isHovering","level2","WordInfoGroup","visible","parseHtmlFromResponse","response","DOMParser","parseFromString","matchElementByText","html","elementQuery","exact","xpath","matchedElement","evaluate","XPathResult","FIRST_ORDERED_NODE_TYPE","singleNodeValue","proxy","url","params","parse","server","get","API_NAME","getApiUrl","a","tonelessPinyin","removeTones","proxyPage","hanTrainerProUrl","getKeyDomNode","getValueDomNode","matchedKeyDomNode","closest","nextElementSibling","logInnerError","err","failedFor","console","warn","generateDetail","normalizeHanziTrainerDetails","translations","example","wordsContaining","generatedDetails","isEmptyObject","push","reduce","acc","wordHanzi","error","getHanziTrainerDetails","Error","getMatchedNode","translationMatch","querySelector","innerText","replace","split","w","trim","exampleMatch","exampleNodes","wordsContainingMatch","wordsContainingMatchNodes","split2","split3","message","WordActionGroup","setIsFlipped","moreInfo","setMoreInfo","isChallengeMode","setIsChallengeMode","onSetFocusMode","pendingSpeechScraper","setPendingSpeechScraper","pendingMoreInfo","setPendingMoreInfo","startQuiz","onSpeak","trySpeakNative","onMoreInfo","length","loadCharacterData","radStrokes","strokes","hanziTrainerDetails","totalStrokeCount","radicalStrokeCount","v","fallDistance","exit","TooltipButton","tooltip","onClick","noop","icon","FavoriteIcon","disabled","SpeakIcon","loading","InfoIcon","bg","hideOutline","MedalIcon","cancelQuiz","CancelIcon","GestureIcon","FocusModeInfoText","CardInnerContainerFront","CardInnerContainerBack","$isFlipped","Card","isChildInFocusMode","setIsChildInFocusMode","setIsHovering","setIsFocusMode","currentCard","_isHovering","_isParentHovering","scrollIntoView","block","behavior","onTapCancel","layout","variants","onHoverStart","onHoverEnd","FocusModeWrapper","CardGrid","cards","ContainerWithCenteredItems","onMouseEnter","onMouseLeave","card"],"mappings":"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","file":"static/js/18.435f6a63.chunk.js","sourcesContent":["const getDefaultHanziWriterOptions = theme => ({\r\n\twidth: 150,\r\n\theight: 150,\r\n\tpadding: 5,\r\n\tstrokeColor: theme.palette.primary.main,\r\n\tradicalColor: theme.palette.success.main,\r\n\t// strokeAnimationSpeed: 1,\r\n\tdelayBetweenStrokes: 200,\r\n\tdelayBetweenLoops: 500,\r\n\tdrawingColor: theme.palette.text.primary,\r\n\t// drawingWidth: 25,\r\n});\r\n\r\nconst START_MODES = {\r\n\tLOOP: 'loop',\r\n\tDRAW_ONCE: 'drawOnce',\r\n\tQUIZ: 'quiz',\r\n\tQUIZ_CHALLENGE: 'quizChallenge',\r\n\tQUIZ_CHALLENGE_HIGHLIGHT_ONCE: 'quizChallengeHighlightOnce',\r\n};\r\n\r\nconst DEFAULT_OPTIONS = {\r\n\tsize: 150,\r\n\thanziWriterOptions: {},\r\n\triceGrid: true,\r\n\tstartMode: START_MODES.LOOP,\r\n};\r\n\r\nexport { getDefaultHanziWriterOptions, START_MODES, DEFAULT_OPTIONS };\r\n","import { numberOrString, refType } from 'components/types';\r\nimport { bool } from 'prop-types';\r\n\r\nconst propTypes = {\r\n\tinnerRef: refType.isRequired,\r\n\tsize: numberOrString.isRequired,\r\n\triceGrid: bool,\r\n};\r\n\r\nconst defaultProps = {\r\n\triceGrid: true,\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import React, { memo, forwardRef } from 'react';\r\n\r\nconst Plain = memo(forwardRef((props, ref) => <div {...props} ref={ref} />));\r\n\r\nexport default Plain;\r\n","import { bool, string } from 'prop-types';\r\n\r\nimport { numberOrString } from 'components/types';\r\n\r\nconst propTypes = {\r\n\triceGrid: bool,\r\n\tsize: numberOrString,\r\n\tcolor: string,\r\n\topacity: numberOrString,\r\n};\r\nconst defaultProps = {\r\n\triceGrid: true,\r\n\tsize: 150,\r\n\tcolor: '#f50057',\r\n\topacity: 0.4,\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import React, { forwardRef, memo } from 'react';\r\n\r\nimport { propTypes, defaultProps } from './types';\r\n\r\nconst RiceGrid = memo(\r\n\tforwardRef(({ size, color, opacity }, ref) => {\r\n\t\tconst StyledLine = props => (\r\n\t\t\t<line {...props} stroke={color} strokeOpacity={opacity} />\r\n\t\t);\r\n\t\treturn (\r\n\t\t\t<svg\r\n\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\t\twidth={size}\r\n\t\t\t\theight={size}\r\n\t\t\t\tref={ref}\r\n\t\t\t>\r\n\t\t\t\t<StyledLine x1=\"0\" y1=\"0\" x2={size} y2={size} />\r\n\t\t\t\t<StyledLine x1={size} y1=\"0\" x2=\"0\" y2={size} />\r\n\t\t\t\t<StyledLine x1={size / 2} y1=\"0\" x2={size / 2} y2={size} />\r\n\t\t\t\t<StyledLine x1=\"0\" y1={size / 2} x2={size} y2={size / 2} />\r\n\t\t\t</svg>\r\n\t\t);\r\n\t})\r\n);\r\n\r\nRiceGrid.propTypes = propTypes;\r\nRiceGrid.defaultProps = defaultProps;\r\n\r\nexport default RiceGrid;\r\n","import React, { memo, forwardRef } from 'react';\r\n\r\nimport Plain from './Plain';\r\nimport RiceGrid from './RiceGrid';\r\nimport { propTypes, defaultProps } from './types';\r\n\r\nconst Background = memo(\r\n\tforwardRef(({ riceGrid, ...rest }, ref) => {\r\n\t\tconst Bg = (riceGrid && RiceGrid) || Plain;\r\n\t\treturn <Bg {...rest} ref={ref} />;\r\n\t})\r\n);\r\n\r\nBackground.propTypes = propTypes;\r\nBackground.defaultProps = defaultProps;\r\n\r\nexport default Background;\r\n","import React, { memo } from 'react';\r\n\r\nimport { propTypes, defaultProps } from './types';\r\nimport Background from './Background';\r\n\r\nconst Hanzi = memo(({ innerRef, size, riceGrid }) => (\r\n\t<Background size={size} riceGrid={riceGrid} ref={innerRef} />\r\n));\r\n\r\nHanzi.propTypes = propTypes;\r\nHanzi.defaultProps = defaultProps;\r\n\r\nexport default Hanzi;\r\n","import { useTheme } from '@material-ui/core';\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport HanziWriter from 'hanzi-writer';\r\n\r\nimport Hanzi from './Hanzi';\r\n\r\nimport {\r\n\tgetDefaultHanziWriterOptions,\r\n\tDEFAULT_OPTIONS,\r\n\tSTART_MODES,\r\n} from './constants';\r\n\r\n/**\r\n * Creates and returns a re-writeable and configurable Hanzi\r\n * @param {String} character Single Hanzi.\r\n * @param {Object} options Options for building the hanzi\r\n * - size, startMode, riceGrid\r\n */\r\nconst useHanzi = (character, options = DEFAULT_OPTIONS) => {\r\n\t/** @type {[Writer, SetStateAction<Writer>]} */\r\n\tconst [bgSize, setBgSize] = useState(options.size || 150);\r\n\tconst [writer, setWriter] = useState(null);\r\n\tconst theme = useTheme();\r\n\r\n\t/** @type {import('react').Ref<HTMLElement>} */\r\n\tconst charRef = useRef();\r\n\r\n\tconst writeHanzi = (newCharacter = character, newOptions = options) => {\r\n\t\tconst _options = {\r\n\t\t\t...DEFAULT_OPTIONS,\r\n\t\t\t...newOptions,\r\n\t\t\thanziWriterOptions: {\r\n\t\t\t\twidth: newOptions.width || newOptions.size,\r\n\t\t\t\theight: newOptions.height || newOptions.size,\r\n\t\t\t\tshowOutline:\r\n\t\t\t\t\t(options || DEFAULT_OPTIONS).startMode !==\r\n\t\t\t\t\tSTART_MODES.QUIZ_CHALLENGE,\r\n\t\t\t\tshowCharacter:\r\n\t\t\t\t\t(options || DEFAULT_OPTIONS).startMode !==\r\n\t\t\t\t\tSTART_MODES.QUIZ_CHALLENGE,\r\n\t\t\t},\r\n\t\t};\r\n\r\n\t\tif (bgSize !== _options.size) setBgSize(_options.size);\r\n\r\n\t\tif (charRef.current) {\r\n\t\t\t// Clear the previous writing first\r\n\t\t\tif (writer) {\r\n\t\t\t\tcharRef.current\r\n\t\t\t\t\t.querySelectorAll((options.riceGrid && 'defs, g') || 'svg')\r\n\t\t\t\t\t.forEach(e => e.remove());\r\n\t\t\t}\r\n\r\n\t\t\t/** @type {Writer} */\r\n\t\t\tconst hanziWriter = HanziWriter.create(\r\n\t\t\t\tcharRef.current,\r\n\t\t\t\tnewCharacter,\r\n\t\t\t\t{\r\n\t\t\t\t\t...getDefaultHanziWriterOptions(theme),\r\n\t\t\t\t\t..._options.hanziWriterOptions,\r\n\t\t\t\t}\r\n\t\t\t);\r\n\r\n\t\t\tconst recursiveQuiz = () => {\r\n\t\t\t\thanziWriter.quiz({\r\n\t\t\t\t\tonComplete: () => {\r\n\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\trecursiveQuiz();\r\n\t\t\t\t\t\t}, 1200);\r\n\t\t\t\t\t},\r\n\t\t\t\t});\r\n\t\t\t};\r\n\r\n\t\t\tsetWriter(hanziWriter);\r\n\t\t\tswitch (newOptions.startMode) {\r\n\t\t\t\tcase START_MODES.LOOP:\r\n\t\t\t\t\thanziWriter.loopCharacterAnimation();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase START_MODES.QUIZ:\r\n\t\t\t\t\trecursiveQuiz();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase START_MODES.QUIZ_CHALLENGE_HIGHLIGHT_ONCE:\r\n\t\t\t\t\trecursiveQuiz();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tcase START_MODES.QUIZ_CHALLENGE:\r\n\t\t\t\t\trecursiveQuiz();\r\n\t\t\t\t\tbreak;\r\n\t\t\t\tdefault:\r\n\t\t\t\t\t// No Default\r\n\t\t\t\t\t// DRAW_ONCE\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\twriteHanzi();\r\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\r\n\t}, []);\r\n\r\n\treturn {\r\n\t\thanzi: (\r\n\t\t\t<Hanzi\r\n\t\t\t\tinnerRef={charRef}\r\n\t\t\t\tsize={bgSize}\r\n\t\t\t\triceGrid={options.riceGrid}\r\n\t\t\t/>\r\n\t\t),\r\n\t\trewrite: writeHanzi,\r\n\t\twriter,\r\n\t};\r\n};\r\n\r\nexport default useHanzi;\r\n","const { useRef, useEffect } = require('react');\r\n\r\n// https://stackoverflow.com/a/54292872/13161405\r\nconst useOuterClick = cb => {\r\n\tconst callbackRef = useRef(); // initialize mutable callback ref\r\n\tconst innerRef = useRef(); // returned to client, who sets the \"border\" element\r\n\r\n\t// update callback on each render, so second useEffect has most recent callback\r\n\tuseEffect(() => {\r\n\t\tcallbackRef.current = cb;\r\n\t});\r\n\tuseEffect(() => {\r\n\t\tconst handleClick = e => {\r\n\t\t\tif (\r\n\t\t\t\tinnerRef.current &&\r\n\t\t\t\tcallbackRef.current &&\r\n\t\t\t\t!innerRef.current.contains(e.target)\r\n\t\t\t)\r\n\t\t\t\tcallbackRef.current(e);\r\n\t\t};\r\n\t\tdocument.addEventListener('click', handleClick);\r\n\t\treturn () => document.removeEventListener('click', handleClick);\r\n\t}, []); // no dependencies -> stable click listener\r\n\r\n\treturn innerRef; // convenience for client (doesn't need to init ref himself)\r\n};\r\n\r\nexport default useOuterClick;\r\n","import { CARD_BASE_SIZE, CARD_FOCUS_MODE_SIZE } from './constants';\r\n\r\n/** @returns {{initial: TargetAndTransition, animate: TargetAndTransition}} */\r\nconst dropFromTheSky = (distance = 250, reverse = false) => ({\r\n\tinitial: {\r\n\t\ty: !reverse ? -distance : 0,\r\n\t\topacity: !reverse ? 0 : 1,\r\n\t\tpointerEvents: 'none',\r\n\t},\r\n\tanimate: {\r\n\t\ty: !reverse ? 0 : -distance,\r\n\t\topacity: !reverse ? 1 : 0,\r\n\t\tpointerEvents: 'initial',\r\n\t},\r\n});\r\n\r\n/** @type {TargetAndTransition} */\r\nconst exit = {\r\n\tscale: 20,\r\n\topacity: 0,\r\n\tpointerEvents: 'none',\r\n\ttransition: {\r\n\t\tease: 'easeIn',\r\n\t\tdelay: 0.2,\r\n\t\t// duration: 1,\r\n\t\ttransitionEnd: { display: 'none' },\r\n\t},\r\n};\r\n\r\nconst spring = {\r\n\ttype: 'spring',\r\n\tstiffness: 1000,\r\n\t// damping: 5,\r\n\tduration: 0,\r\n};\r\n\r\nconst easeOut = {\r\n\tease: 'easeOut',\r\n\tduration: 0.2,\r\n};\r\n\r\nconst cardAnimationVariants = {\r\n\t/**\r\n\t * @param {MuiTheme} theme - MuiTheme\r\n\t * @returns {TargetAndTransition}\r\n\t */\r\n\tisFocusMode: () => ({\r\n\t\t// width: '100% !important',\r\n\t\t// height: '100% !important',\r\n\t\t// position: 'absolute',\r\n\t\t// top: 0,\r\n\t\t// left: 0,\r\n\t\tscale: 1,\r\n\t}),\r\n\t/**\r\n\t * @param {MuiTheme} theme - MuiTheme\r\n\t * @returns {TargetAndTransition}\r\n\t */\r\n\tisHovering: () => ({\r\n\t\trotate: [0, 5, -5, 5, -5, 0, 0],\r\n\t\tscale: [1, 1, 1.8],\r\n\t\tzIndex: 3,\r\n\t}),\r\n\t/**\r\n\t * @param {MuiTheme} theme - MuiTheme\r\n\t * @returns {TargetAndTransition}\r\n\t */\r\n\tisNotHovering: () => ({\r\n\t\trotate: 0,\r\n\t\tscale: 1,\r\n\t\tzIndex: 1,\r\n\t}),\r\n\t/**\r\n\t * @param {MuiTheme} theme - MuiTheme\r\n\t * @returns {TargetAndTransition}\r\n\t */\r\n\tisParentHovering: theme => ({\r\n\t\tmargin: `${theme.spacing(1)}px`,\r\n\t\t/* NOTE: This will be dynamic i.e. use wants to see the translation and pinyin, then there will be margin */\r\n\t\tmarginBottom: `${theme.spacing(1) + 20}px`,\r\n\t\twidth: theme.spacing(23),\r\n\t\theight: theme.spacing(23),\r\n\t\tborderRadius: `${theme.shape.borderRadius}px`,\r\n\t\ttransition: spring,\r\n\t}),\r\n\t/**\r\n\t * @param {MuiTheme} theme - MuiTheme\r\n\t * @returns {TargetAndTransition}\r\n\t */\r\n\tisParentNotHovering: theme => ({\r\n\t\tmargin: `${0}px`,\r\n\t\t/* NOTE: This will be dynamic i.e. use wants to see the translation and pinyin, then there will be margin */\r\n\t\tmarginBottom: '20px',\r\n\t\twidth: theme.spacing(25),\r\n\t\theight: theme.spacing(25),\r\n\t\tborderRadius: `${0}px`,\r\n\t\ttransition: easeOut,\r\n\t}),\r\n};\r\n\r\nconst cardInnerContainerFrontAnimationVariants = {\r\n\tisFlipped: {\r\n\t\trotateY: -180,\r\n\t},\r\n\tisNotFlipped: {\r\n\t\trotateY: 0,\r\n\t},\r\n\tisFocusMode: {\r\n\t\twidth: CARD_FOCUS_MODE_SIZE,\r\n\t\theight: CARD_FOCUS_MODE_SIZE,\r\n\t},\r\n\tisNotFocusMode: {\r\n\t\twidth: CARD_BASE_SIZE,\r\n\t\theight: CARD_BASE_SIZE,\r\n\t},\r\n};\r\n\r\nconst cardInnerContainerBackAnimationVariants = {\r\n\tisFlipped: {\r\n\t\trotateY: 0,\r\n\t},\r\n\tisNotFlipped: {\r\n\t\trotateY: 180,\r\n\t},\r\n};\r\n\r\nconst wordActionGroupExit = {\r\n\theight: 0,\r\n\topacity: 0,\r\n\toverflow: 'hidden',\r\n\ttransition: { duration: 0.3 },\r\n};\r\n\r\nexport {\r\n\tdropFromTheSky,\r\n\texit,\r\n\tspring,\r\n\teaseOut,\r\n\tcardAnimationVariants,\r\n\tcardInnerContainerFrontAnimationVariants,\r\n\tcardInnerContainerBackAnimationVariants,\r\n\twordActionGroupExit,\r\n};\r\n","const CARD_BASE_SIZE = 150;\r\nconst CARD_FOCUS_MODE_SIZE = 275;\r\n\r\nexport { CARD_BASE_SIZE, CARD_FOCUS_MODE_SIZE };\r\n","import { arrayOf, string, shape } from 'prop-types';\r\n\r\nconst cardProps = {\r\n\ttext: string,\r\n\tid: string.isRequired,\r\n\thanzi: string.isRequired,\r\n\ttranslation: string.isRequired,\r\n\tpinyin: string.isRequired,\r\n};\r\n\r\nconst cardType = shape(cardProps);\r\n\r\nconst cards = arrayOf(cardType);\r\n\r\nconst propTypes = {\r\n\tcards,\r\n};\r\n\r\nconst defaultProps = {\r\n\tcards: [],\r\n};\r\n\r\nexport { cardProps, cardType, cards, propTypes, defaultProps };\r\n","import { string, bool, object, func } from 'prop-types';\r\nimport { theme } from 'components/types';\r\nimport { cardType } from '../types';\r\n\r\nconst cardPropTypes = {\r\n\ttext: string.isRequired,\r\n\tisParentHovering: bool.isRequired,\r\n};\r\nconst cardDefaultProps = {};\r\n\r\nconst wordInfoGroupPropTypes = {\r\n\tisParentHovering: bool.isRequired,\r\n\tisHovering: bool.isRequired,\r\n\tcardProps: cardType.isRequired,\r\n\tvisible: bool.isRequired,\r\n};\r\n\r\nconst wordInfoGroupDefaultProps = {};\r\n\r\nconst writerType = object;\r\n\r\nconst wordActionGroupPropTypes = {\r\n\twriter: writerType.isRequired,\r\n\tisParentHovering: bool.isRequired,\r\n\tisHovering: bool.isRequired,\r\n\ttheme,\r\n\tisFlipped: bool.isRequired,\r\n\tsetIsFlipped: func.isRequired,\r\n\tisChallengeMode: bool.isRequired,\r\n\tsetIsChallengeMode: func.isRequired,\r\n\tisFocusMode: bool.isRequired,\r\n\tonSetFocusMode: func.isRequired,\r\n\tcardProps: cardType.isRequired,\r\n};\r\nconst wordActionGroupDefaultProps = {};\r\n\r\nexport {\r\n\tcardPropTypes,\r\n\tcardDefaultProps,\r\n\twordInfoGroupPropTypes,\r\n\twordInfoGroupDefaultProps,\r\n\twriterType,\r\n\twordActionGroupPropTypes,\r\n\twordActionGroupDefaultProps,\r\n};\r\n","import { elementType, string } from 'prop-types';\r\n\r\nconst propTypes = {\r\n\tclassName: string,\r\n\tcomponent: elementType,\r\n};\r\nconst defaultProps = {\r\n\tclassName: '',\r\n\tcomponent: 'div',\r\n};\r\n\r\nexport { propTypes, defaultProps };\r\n","import { motion } from 'framer-motion';\r\nimport React, { forwardRef } from 'react';\r\n\r\nimport { propTypes, defaultProps } from './types';\r\n\r\n/**\r\n * @component\r\n *\r\n * @param {Object} props\r\n * @param {import('react').ElementType|HTMLElementTagNameMap} props.component\r\n * @param {...any} props.rest\r\n */\r\nconst ForwardingDiv = forwardRef(({ className, component, ...rest }, ref) => (\r\n\t<motion.div\r\n\t\tclassName={\r\n\t\t\t`theme-duration-wrapper${className && ` ${className}`}` || ''\r\n\t\t}\r\n\t\t{...rest}\r\n\t\tref={ref}\r\n\t/>\r\n));\r\n\r\nForwardingDiv.propTypes = propTypes;\r\nForwardingDiv.defaultProps = defaultProps;\r\n\r\nexport default ForwardingDiv;\r\n","import styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\nimport { useMediaQuery } from '@material-ui/core';\r\nimport ForwardingDiv from 'components/ForwardingDiv';\r\n\r\nconst CardPlaceholder = styled(motion.custom(ForwardingDiv))`\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tmargin: 0px;\r\n\t${({ theme, $isParentHovering, $isFocusMode }) => {\r\n\t\tconst smAndDown = useMediaQuery(t => t.breakpoints.down('sm'));\r\n\t\t// This always appears\r\n\t\tconst topNavbarDiff = '64px';\r\n\t\t// This only appears on small device\r\n\t\tconst bottomNavbarDiff = (smAndDown && ' + 56px') || '';\r\n\t\t// This only appears on bigger device\r\n\t\tconst footerDiff = (!smAndDown && ' + 30px') || '';\r\n\r\n\t\t// Translation & Pinyin height\r\n\t\tconst translationAndPinyinDiff = ' + 20px';\r\n\t\t// Extra buttons height\r\n\t\tconst extraButtonsDiff = ' + 35px';\r\n\r\n\t\treturn `\t\t\r\n\t\t\tborder-color: ${theme.palette.background.level1};\r\n\t\t\tbackground-color: ${theme.palette.background.level1};\r\n\t\t\tbox-shadow: ${($isParentHovering && theme.shadows[3]) || 'none'};\r\n\t\t\t${\r\n\t\t\t\t($isFocusMode &&\r\n\t\t\t\t\t`\r\n\t\t\t\t// Navigation + Footer (if desktop) + BottomNavbar (if mobile)\r\n\t\t\t\theight: calc(100% - (${topNavbarDiff}${bottomNavbarDiff}${footerDiff}${translationAndPinyinDiff}${extraButtonsDiff})) !important;\r\n\t\t\t\t// some extra push from the top\r\n\t\t\t\ttop: calc(${topNavbarDiff} + 15px);\r\n\t\t\t\twidth: 100% !important;\r\n\t\t\t\tposition: fixed;\r\n\t\t\t\tleft: 0;\r\n\t\t\t\tmargin: 0 !important;\r\n\t\t\t`) ||\r\n\t\t\t\t''\r\n\t\t\t}\r\n\t\t`;\r\n\t}}\r\n`;\r\n\r\nexport default CardPlaceholder;\r\n","import styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport ForwardingDiv from 'components/ForwardingDiv';\r\n\r\nconst CardWrapper = styled(motion.custom(ForwardingDiv))`\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\tposition: relative;\r\n\t${({ theme, $isParentHovering }) => `\r\n\t\tborder-radius: ${($isParentHovering && theme.shape.borderRadius) || 0}px;\r\n\t`}\r\n`;\r\n\r\nexport default CardWrapper;\r\n","import styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport ForwardingDiv from 'components/ForwardingDiv';\r\n\r\nconst CardContainer = styled(motion.custom(ForwardingDiv))`\r\n\twidth: 100%;\r\n\tdisplay: flex;\r\n\tflex-wrap: wrap;\r\n\tjustify-content: center;\r\n\talign-items: center;\r\n\t${({ theme }) => `\r\n\t\tpadding: ${theme.spacing(1)}px;\r\n\t\tbackground-color: ${theme.palette.background.level1};\r\n\t\tbackground-color: ${theme.palette.background.level1};\r\n\t`}\r\n`;\r\n\r\nexport default CardContainer;\r\n","import { array, arrayOf, bool, node, object, oneOfType } from 'prop-types';\r\n\r\nconst detailGroupBodyPropTypes = {\r\n\tbody: oneOfType([object, array]),\r\n};\r\nconst detailGroupBodyDefaultProps = {\r\n\tbody: [],\r\n};\r\n\r\nconst detailTitlePropTypes = {\r\n\tisKey: bool,\r\n\tchildren: node,\r\n};\r\nconst detailTitleDefaultProps = {\r\n\tisKey: false,\r\n\tchildren: '',\r\n};\r\n\r\nconst moreInfoContainerPropTypes = {\r\n\tdetails: arrayOf(object),\r\n};\r\nconst moreInfoContainerDefaultProps = {};\r\n\r\nexport {\r\n\tdetailGroupBodyPropTypes,\r\n\tdetailGroupBodyDefaultProps,\r\n\tdetailTitlePropTypes,\r\n\tdetailTitleDefaultProps,\r\n\tmoreInfoContainerPropTypes,\r\n\tmoreInfoContainerDefaultProps,\r\n};\r\n","import React from 'react';\r\nimport { Typography } from '@material-ui/core';\r\nimport { bool } from 'prop-types';\r\n\r\nconst TypographyWrapper = ({ isKey, ...rest }) => (\r\n\t<Typography\r\n\t\tvariant=\"caption\"\r\n\t\t{...(isKey && { color: 'primary' })}\r\n\t\t{...rest}\r\n\t/>\r\n);\r\n\r\nTypographyWrapper.propTypes = {\r\n\tisKey: bool,\r\n};\r\nTypographyWrapper.defaultProps = {\r\n\tisKey: false,\r\n};\r\n\r\nexport default TypographyWrapper;\r\n","import React from 'react';\r\n\r\nimport { firstCapital } from 'utils';\r\nimport { detailTitlePropTypes, detailTitleDefaultProps } from './types';\r\nimport TypographyWrapper from '../TypographyWrapper';\r\n\r\nconst DetailTitle = ({ isKey, children, ...rest }) => (\r\n\t<TypographyWrapper variant=\"subtitle1\" component=\"b\" isKey {...rest}>\r\n\t\t{firstCapital(children)}\r\n\t</TypographyWrapper>\r\n);\r\n\r\nDetailTitle.propTypes = detailTitlePropTypes;\r\nDetailTitle.defaultProps = detailTitleDefaultProps;\r\n\r\nexport default DetailTitle;\r\n","import React from 'react';\r\n\r\nimport { firstCapital, pascalToSentence } from 'utils';\r\nimport TypographyWrapper from '../TypographyWrapper';\r\n\r\nimport { detailGroupBodyPropTypes, detailGroupBodyDefaultProps } from './types';\r\n\r\nconst DetailGroupBody = ({ body }) =>\r\n\t(Array.isArray(body) &&\r\n\t\tbody.map(text => (\r\n\t\t\t<TypographyWrapper key={text} component=\"p\">\r\n\t\t\t\t{text}\r\n\t\t\t</TypographyWrapper>\r\n\t\t))) ||\r\n\tObject.keys(body).map(key => (\r\n\t\t<TypographyWrapper component=\"p\" key={key}>\r\n\t\t\t<TypographyWrapper isKey>\r\n\t\t\t\t{firstCapital(pascalToSentence(key))}:\r\n\t\t\t</TypographyWrapper>{' '}\r\n\t\t\t<TypographyWrapper>{body[key]}</TypographyWrapper>\r\n\t\t</TypographyWrapper>\r\n\t));\r\n\r\nDetailGroupBody.propTypes = detailGroupBodyPropTypes;\r\nDetailGroupBody.defaultProps = detailGroupBodyDefaultProps;\r\n\r\nexport default DetailGroupBody;\r\n","import React from 'react';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nimport DetailTitle from './DetailTitle';\r\nimport DetailGroupBody from './DetailGroupBody';\r\n\r\nconst Details = ({ details }) =>\r\n\tdetails.map(({ title, body }) => (\r\n\t\t<div key={title}>\r\n\t\t\t{/* GROUP TITLE */}\r\n\t\t\t<DetailTitle>{title}</DetailTitle>\r\n\t\t\t<Divider />\r\n\t\t\t{/* KEY & VALUES */}\r\n\t\t\t{<DetailGroupBody body={body} />}\r\n\t\t\t<br />\r\n\t\t</div>\r\n\t));\r\n\r\nexport default Details;\r\n","import React, { memo } from 'react';\r\nimport { Box } from '@material-ui/core';\r\n\r\nimport Details from './Details';\r\nimport {\r\n\tmoreInfoContainerPropTypes,\r\n\tmoreInfoContainerDefaultProps,\r\n} from './types';\r\n\r\nconst MoreInfoContainer = memo(({ details }) => (\r\n\t<Box p={1} width=\"100%\" height=\"100%\">\r\n\t\t<Details details={details} />\r\n\t</Box>\r\n));\r\n\r\nMoreInfoContainer.propTypes = moreInfoContainerPropTypes;\r\nMoreInfoContainer.defaultProps = moreInfoContainerDefaultProps;\r\n\r\nexport default MoreInfoContainer;\r\n","import styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport ForwardingDiv from 'components/ForwardingDiv';\r\n\r\nconst ExtrasContainer = styled(motion.custom(ForwardingDiv))`\r\n\t${({ theme, $position, $isHovering, $isParentHovering }) => `\r\n\t\tbackground-color: ${theme.palette.background.level2};\r\n\t\t${($position !== 'top' && `box-shadow: ${theme.shadows[3]};`) || ''}\r\n\t\t${\r\n\t\t\t($isParentHovering &&\r\n\t\t\t\t`\r\n\t\t\tborder-${$position}-right-radius: ${theme.shape.borderRadius}px;\r\n\t\t\tborder-${$position}-left-radius: ${theme.shape.borderRadius}px;\r\n\t\t`) ||\r\n\t\t\t''\r\n\t\t}\r\n\t\t${$position}: -${($position === 'top' && (($isHovering && 11) || 20)) || 35}px;\r\n\t`}\r\n\t& .MuiIconButton-root {\r\n\t\tpadding: 10px;\r\n\t}\r\n\twidth: 100%;\r\n\t/* height: auto !important; */\r\n\tdisplay: flex;\r\n\tjustify-content: space-evenly;\r\n\tz-index: 1;\r\n\tposition: absolute;\r\n`;\r\n\r\nexport default ExtrasContainer;\r\n","import React from 'react';\r\n\r\nimport { wordInfoGroupPropTypes, wordInfoGroupDefaultProps } from './types';\r\nimport ExtrasContainer from './ExtrasContainer';\r\nimport TypographyWrapper from './TypographyWrapper';\r\n\r\nconst WordInfoGroup = ({\r\n\tisParentHovering,\r\n\tisHovering,\r\n\tcardProps,\r\n\tvisible,\r\n}) => {\r\n\tconst { translation, pinyin } = cardProps;\r\n\r\n\treturn (\r\n\t\tvisible && (\r\n\t\t\t<ExtrasContainer\r\n\t\t\t\t$position=\"top\"\r\n\t\t\t\t$isParentHovering={isParentHovering}\r\n\t\t\t\t$isHovering={isHovering}\r\n\t\t\t>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TypographyWrapper isKey>Translation:</TypographyWrapper>\r\n\t\t\t\t\t{` `}\r\n\t\t\t\t\t<TypographyWrapper>{translation}</TypographyWrapper>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<TypographyWrapper isKey>Pinyin:</TypographyWrapper>{' '}\r\n\t\t\t\t\t<TypographyWrapper>{pinyin}</TypographyWrapper>\r\n\t\t\t\t</div>\r\n\t\t\t</ExtrasContainer>\r\n\t\t)\r\n\t);\r\n};\r\n\r\nWordInfoGroup.propTypes = wordInfoGroupPropTypes;\r\nWordInfoGroup.defaultProps = wordInfoGroupDefaultProps;\r\n\r\nexport default WordInfoGroup;\r\n","const parseHtmlFromResponse = response => {\r\n\tconst parser = new DOMParser();\r\n\tconst doc = parser.parseFromString(response, 'text/html');\r\n\r\n\treturn doc;\r\n};\r\n\r\nconst matchElementByText = (html, elementQuery, text, exact = true) => {\r\n\t// https://stackoverflow.com/a/29289196/13161405 (xpath algorithm)\r\n\tconst xpath =\r\n\t\t(exact && `//${elementQuery}[text()='${text}']`) ||\r\n\t\t`//${elementQuery}[contains(text(),'${text}')]`;\r\n\r\n\tconst matchedElement = html.evaluate(\r\n\t\txpath,\r\n\t\thtml,\r\n\t\tnull,\r\n\t\tXPathResult.FIRST_ORDERED_NODE_TYPE,\r\n\t\tnull\r\n\t).singleNodeValue;\r\n\r\n\treturn matchedElement;\r\n};\r\n\r\nexport { parseHtmlFromResponse, matchElementByText };\r\n","import { server, parse } from './rest';\r\n\r\nconst PROXY_ROUTE = 'proxy/';\r\n\r\nconst proxy = (url, params) => parse(server.get(PROXY_ROUTE + url, params));\r\n\r\nexport default proxy;\r\n","import { removeTones } from 'utils/chinese';\r\nimport { isEmptyObject } from 'utils/object';\r\nimport { parseHtmlFromResponse, matchElementByText } from 'utils/dom';\r\nimport proxy from './proxyApi';\r\n\r\nconst API_NAME = 'Hanzi Trainer Pro';\r\nconst API_URL_PREFIX =\r\n\t'https://dictionary.hantrainerpro.com/chinese-english/translation-';\r\nconst API_URL_POSTFIX = '.htm';\r\nconst MATCH_WORD_TRANSLATIONS = 'English translations';\r\nconst MATCH_WORD_EXAMPLE = 'Chinese Pinyin example sentence with';\r\nconst MATCH_WORD_WORDS_CONTAINING =\r\n\t'Chinese example words containing the character';\r\n\r\nconst getApiUrl = async (pinyin, translation) => {\r\n\tconst tonelessPinyin = removeTones(pinyin);\r\n\treturn `${API_URL_PREFIX}${tonelessPinyin}_${translation}${API_URL_POSTFIX}`;\r\n};\r\n\r\n/**\r\n * @see\r\n *\r\n * @param {String} pinyin Pinyin to search\r\n */\r\nconst proxyPage = async (pinyin, translation) => {\r\n\tconst hanTrainerProUrl = await getApiUrl(pinyin, translation);\r\n\tconst response = await proxy(hanTrainerProUrl);\r\n\r\n\treturn response;\r\n};\r\n\r\nconst getKeyDomNode = (html, text, exact = true) =>\r\n\tmatchElementByText(html, 'b', text, exact);\r\n\r\nconst getValueDomNode = matchedKeyDomNode =>\r\n\tmatchedKeyDomNode.closest('div').nextElementSibling;\r\n\r\nconst logInnerError = (err, failedFor) => {\r\n\tconsole.warn(`Error parsing the ${failedFor} from ${API_NAME}`, {\r\n\t\terr,\r\n\t});\r\n};\r\n\r\nconst getHanziTrainerDetails = async (pinyin, translation) => {\r\n\tconst details = {\r\n\t\ttranslations: [],\r\n\t\texample: {},\r\n\t\twordsContaining: [],\r\n\t};\r\n\r\n\ttry {\r\n\t\tconst response = await proxyPage(pinyin, translation);\r\n\t\tif (!response) throw new Error('Failed to proxy.');\r\n\r\n\t\tconst html = parseHtmlFromResponse(response);\r\n\t\tif (!html) throw new Error('Failed to parse the html.');\r\n\r\n\t\tconst getMatchedNode = (text, exact = true) =>\r\n\t\t\tgetValueDomNode(getKeyDomNode(html, text, exact));\r\n\r\n\t\t// English Translations\r\n\t\t/**\r\n\t\t * [\r\n\t\t * \t'good,\r\n\t\t * \t'kind',\r\n\t\t * \t'very',\r\n\t\t * ]\r\n\t\t */\r\n\t\ttry {\r\n\t\t\tconst translationMatch = getMatchedNode(MATCH_WORD_TRANSLATIONS);\r\n\t\t\tdetails.translations = translationMatch\r\n\t\t\t\t.querySelector('p')\r\n\t\t\t\t// eslint-disable-next-line prettier/prettier\r\n\t\t\t\t.innerText.replace(/\\n/, '')\r\n\t\t\t\t.split(',')\r\n\t\t\t\t.map(w => w.trim());\r\n\t\t} catch (err) {\r\n\t\t\tlogInnerError(err, 'translations');\r\n\t\t}\r\n\r\n\t\t// Example\r\n\t\t/**\r\n\t\t * {\r\n\t\t * \tpinyin: \"Zhè fēicháng hăo.\",\r\n\t\t * \ttranslation: \"This is very good.\"\r\n\t\t * }\r\n\t\t */\r\n\t\ttry {\r\n\t\t\tconst exampleMatch = getMatchedNode(MATCH_WORD_EXAMPLE, false);\r\n\t\t\tconst exampleNodes = [...exampleMatch.querySelectorAll('i')];\r\n\r\n\t\t\tdetails.example = {\r\n\t\t\t\tpinyin: `${exampleNodes[0].innerText.split('.')[1]}.`,\r\n\t\t\t\ttranslation: exampleNodes[1].children[0].innerText,\r\n\t\t\t};\r\n\t\t} catch (err) {\r\n\t\t\tlogInnerError(err, 'example');\r\n\t\t}\r\n\r\n\t\t// Other words containing this hanzi\r\n\t\t/**\r\n\t\t * [\r\n\t\t * \t{\r\n\t\t * \t\thanzi: \"不好意思\",\r\n\t\t * \t\tpinyin: \"bùhăoyìsi\",\r\n\t\t * \t\ttranslation: \"to feel embarrassed\"\r\n\t\t * \t},\r\n\t\t * ]\r\n\t\t */\r\n\t\ttry {\r\n\t\t\tconst wordsContainingMatch = getMatchedNode(\r\n\t\t\t\tMATCH_WORD_WORDS_CONTAINING,\r\n\t\t\t\tfalse\r\n\t\t\t);\r\n\t\t\tconst wordsContainingMatchNodes = [\r\n\t\t\t\t...wordsContainingMatch.children,\r\n\t\t\t];\r\n\t\t\tdetails.wordsContaining = wordsContainingMatchNodes.map(node => {\r\n\t\t\t\t// This doesn't work as some pinyin are separate\r\n\t\t\t\t// const match = node.innerText.match(/([^\\s()=,]+)/g);\r\n\r\n\t\t\t\t// Temp solution, I should try a better regex\r\n\t\t\t\tconst split = node.innerText.split('(');\r\n\t\t\t\tconst split2 = split[1].split('=');\r\n\t\t\t\tconst split3 = split2[1].split(')');\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\thanzi: split[0].trim(),\r\n\t\t\t\t\tpinyin: split2[0].trim(),\r\n\t\t\t\t\ttranslation: split3[0].trim(),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\t\t} catch (err) {\r\n\t\t\tlogInnerError(err, 'words containing');\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(err.message, { err });\r\n\t}\r\n\treturn details;\r\n};\r\n\r\nconst generateDetail = (title, body) => ({ title, body });\r\n\r\nconst normalizeHanziTrainerDetails = (\r\n\t{ translations, example, wordsContaining },\r\n\thanzi\r\n) => {\r\n\tconst generatedDetails = [];\r\n\r\n\ttry {\r\n\t\tif (!isEmptyObject(translations)) {\r\n\t\t\tgeneratedDetails.push(generateDetail('Translations', translations));\r\n\t\t}\r\n\t\tif (!isEmptyObject(example)) {\r\n\t\t\tgeneratedDetails.push(\r\n\t\t\t\tgenerateDetail(`Example using ${hanzi}`, {\r\n\t\t\t\t\tpinyin: example.pinyin,\r\n\t\t\t\t\ttranslation: example.translation,\r\n\t\t\t\t})\r\n\t\t\t);\r\n\t\t}\r\n\t\tif (!isEmptyObject(wordsContaining)) {\r\n\t\t\tgeneratedDetails.push(\r\n\t\t\t\tgenerateDetail(\r\n\t\t\t\t\t`Words containing ${hanzi}`,\r\n\t\t\t\t\twordsContaining.reduce(\r\n\t\t\t\t\t\t(acc, { hanzi: wordHanzi, pinyin, translation }) => {\r\n\t\t\t\t\t\t\tacc[wordHanzi] = `${translation} (${pinyin})`;\r\n\t\t\t\t\t\t\treturn acc;\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{}\r\n\t\t\t\t\t)\r\n\t\t\t\t)\r\n\t\t\t);\r\n\t\t}\r\n\t} catch (err) {\r\n\t\tconsole.error(`Failed to normalize ${API_NAME} details`);\r\n\t}\r\n\r\n\treturn generatedDetails;\r\n};\r\n\r\nexport { normalizeHanziTrainerDetails };\r\nexport default getHanziTrainerDetails;\r\n","import React, { useState } from 'react';\r\nimport HanziWriter from 'hanzi-writer';\r\n\r\nimport getHanziTrainerDetails, {\r\n\tnormalizeHanziTrainerDetails,\r\n} from 'api/hanziTrainerProApi';\r\nimport { AnimatePresence } from 'framer-motion';\r\nimport TooltipButton from 'components/TooltipButton';\r\nimport { noop } from 'utils';\r\nimport {\r\n\tCancelIcon,\r\n\tFavoriteIcon,\r\n\tGestureIcon,\r\n\tInfoIcon,\r\n\tMedalIcon,\r\n\tSpeakIcon,\r\n} from 'icons';\r\nimport { trySpeakNative } from 'utils/speech';\r\nimport { dropFromTheSky, wordActionGroupExit } from './transitions';\r\nimport ExtrasContainer from './ExtrasContainer';\r\nimport { wordActionGroupPropTypes, wordActionGroupDefaultProps } from './types';\r\n\r\nconst WordActionGroup = ({\r\n\t/** @type {HanziWriter} */\r\n\twriter,\r\n\tisParentHovering,\r\n\tisHovering,\r\n\ttheme,\r\n\tisFlipped,\r\n\tsetIsFlipped,\r\n\tmoreInfo,\r\n\tsetMoreInfo,\r\n\tisChallengeMode,\r\n\tsetIsChallengeMode,\r\n\tisFocusMode,\r\n\tonSetFocusMode,\r\n\tcardProps,\r\n}) => {\r\n\tconst [pendingSpeechScraper, setPendingSpeechScraper] = useState(false);\r\n\tconst [pendingMoreInfo, setPendingMoreInfo] = useState(false);\r\n\r\n\tconst { hanzi, pinyin, translation } = cardProps;\r\n\r\n\tconst startQuiz = () => {\r\n\t\twriter.quiz({\r\n\t\t\tonComplete: () => {\r\n\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\tstartQuiz();\r\n\t\t\t\t}, 1200);\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tconst onSpeak = async () => {\r\n\t\ttry {\r\n\t\t\tsetPendingSpeechScraper(true);\r\n\t\t\tawait trySpeakNative(hanzi, pinyin);\r\n\t\t} catch (err) {\r\n\t\t\tconsole.error('Failed to speak');\r\n\t\t} finally {\r\n\t\t\tsetPendingSpeechScraper(false);\r\n\t\t}\r\n\t};\r\n\r\n\tconst onMoreInfo = async () => {\r\n\t\t// We only run this if it's not yet fetched and it's just being flipped\r\n\t\tif (!isFlipped && !moreInfo.length) {\r\n\t\t\ttry {\r\n\t\t\t\tsetPendingMoreInfo(true);\r\n\t\t\t\t// Get stroke details\r\n\t\t\t\tconst {\r\n\t\t\t\t\tradStrokes,\r\n\t\t\t\t\tstrokes,\r\n\t\t\t\t} = await HanziWriter.loadCharacterData(hanzi);\r\n\r\n\t\t\t\t// Get more info\r\n\t\t\t\tconst hanziTrainerDetails = await getHanziTrainerDetails(\r\n\t\t\t\t\tpinyin,\r\n\t\t\t\t\ttranslation\r\n\t\t\t\t);\r\n\r\n\t\t\t\tsetMoreInfo([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttitle: 'Stroke Details',\r\n\t\t\t\t\t\tbody: {\r\n\t\t\t\t\t\t\ttotalStrokeCount: strokes?.length || 'N/A',\r\n\t\t\t\t\t\t\tradicalStrokeCount: radStrokes?.length || 'N/A',\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t},\r\n\t\t\t\t\t...normalizeHanziTrainerDetails(hanziTrainerDetails, hanzi),\r\n\t\t\t\t]);\r\n\t\t\t} catch (err) {\r\n\t\t\t\tconsole.error('Failed to load more info');\r\n\t\t\t} finally {\r\n\t\t\t\tsetPendingMoreInfo(false);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tsetIsFlipped(v => !v);\r\n\t};\r\n\r\n\tconst onFocusMode = () => {\r\n\t\tif (isFocusMode) {\r\n\t\t\tonSetFocusMode(false);\r\n\t\t\twriter.cancelQuiz();\r\n\t\t\twriter.loopCharacterAnimation();\r\n\t\t} else {\r\n\t\t\tonSetFocusMode(true);\r\n\t\t\tif (isFlipped) setIsFlipped(false);\r\n\t\t\tstartQuiz();\r\n\t\t}\r\n\t};\r\n\r\n\tconst onHideOutline = () => {\r\n\t\tif (isChallengeMode) writer.showOutline();\r\n\t\telse writer.hideOutline();\r\n\t\tsetIsChallengeMode(!isChallengeMode);\r\n\t\tstartQuiz();\r\n\t};\r\n\r\n\tconst fallDistance = 200 - theme.spacing(3);\r\n\r\n\treturn (\r\n\t\t<AnimatePresence>\r\n\t\t\t{isHovering && (\r\n\t\t\t\t<ExtrasContainer\r\n\t\t\t\t\t$position=\"bottom\"\r\n\t\t\t\t\t$isParentHovering={isParentHovering}\r\n\t\t\t\t\t$isHovering={isHovering}\r\n\t\t\t\t\t{...dropFromTheSky(fallDistance)}\r\n\t\t\t\t\texit={wordActionGroupExit}\r\n\t\t\t\t>\r\n\t\t\t\t\t{(!isFocusMode && (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<TooltipButton\r\n\t\t\t\t\t\t\t\ttooltip=\"Add to favorites - Coming Soon -\"\r\n\t\t\t\t\t\t\t\tonClick={noop}\r\n\t\t\t\t\t\t\t\ticon={FavoriteIcon}\r\n\t\t\t\t\t\t\t\tdisabled\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TooltipButton\r\n\t\t\t\t\t\t\t\ttooltip=\"Hear it\"\r\n\t\t\t\t\t\t\t\tonClick={onSpeak}\r\n\t\t\t\t\t\t\t\ticon={SpeakIcon}\r\n\t\t\t\t\t\t\t\tloading={pendingSpeechScraper}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<TooltipButton\r\n\t\t\t\t\t\t\t\ttooltip=\"More Info\"\r\n\t\t\t\t\t\t\t\tonClick={onMoreInfo}\r\n\t\t\t\t\t\t\t\ticon={InfoIcon}\r\n\t\t\t\t\t\t\t\tloading={pendingMoreInfo}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)) || (\r\n\t\t\t\t\t\t<TooltipButton\r\n\t\t\t\t\t\t\t{...(isChallengeMode && { bg: 'primary' })}\r\n\t\t\t\t\t\t\ttooltip={\r\n\t\t\t\t\t\t\t\t(isChallengeMode &&\r\n\t\t\t\t\t\t\t\t\t'Practice Mode (Shows Outline)') ||\r\n\t\t\t\t\t\t\t\t'Challenge Mode! (Hides Outline)'\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={onHideOutline}\r\n\t\t\t\t\t\t\ticon={MedalIcon}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<TooltipButton\r\n\t\t\t\t\t\t{...(isFocusMode && { bg: 'primary' })}\r\n\t\t\t\t\t\ttooltip={\r\n\t\t\t\t\t\t\t(isFocusMode && 'Exit!') ||\r\n\t\t\t\t\t\t\t`Practice Writing. Use the mouse or your finger to draw.`\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonClick={onFocusMode}\r\n\t\t\t\t\t\ticon={(isFocusMode && CancelIcon) || GestureIcon}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</ExtrasContainer>\r\n\t\t\t)}\r\n\t\t</AnimatePresence>\r\n\t);\r\n};\r\n\r\nWordActionGroup.propTypes = wordActionGroupPropTypes;\r\nWordActionGroup.defaultProps = wordActionGroupDefaultProps;\r\n\r\nexport default WordActionGroup;\r\n","import styled from 'styled-components';\r\n\r\nimport TypographyWrapper from './TypographyWrapper';\r\n\r\nconst FocusModeInfoText = styled(TypographyWrapper)`\r\n\tposition: absolute;\r\n\ttop: -35px;\r\n\twidth: 100%;\r\n\ttext-align: center;\r\n\tfont-size: 0.6rem;\r\n`;\r\n\r\nexport default FocusModeInfoText;\r\n","import styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport ForwardingDiv from 'components/ForwardingDiv';\r\n\r\nconst CardInnerContainerFront = styled(motion.custom(ForwardingDiv))`\r\n\tbackface-visibility: hidden;\r\n\tposition: relative;\r\n`;\r\n\r\nexport default CardInnerContainerFront;\r\n","import styled from 'styled-components';\r\nimport { motion } from 'framer-motion';\r\n\r\nimport ForwardingDiv from 'components/ForwardingDiv';\r\n\r\nconst CardInnerContainerBack = styled(motion.custom(ForwardingDiv))`\r\n\theight: 100%;\r\n\twidth: 100%;\r\n\tposition: absolute;\r\n\tbackface-visibility: hidden;\r\n\toverflow: auto;\r\n\t${({ theme, $isFlipped }) => `\r\n\t\tpadding: ${theme.spacing(1)}px 0;\r\n\t\tdisplay: ${($isFlipped && 'flex') || 'none'}\r\n\t`}\r\n`;\r\n\r\nexport default CardInnerContainerBack;\r\n","import React, { useState } from 'react';\r\nimport { useTheme } from '@material-ui/core';\r\n\r\nimport useHanzi from 'components/Hanzi/useHanzi';\r\nimport useOuterClick from 'hooks/useOuterClick';\r\nimport { START_MODES } from 'components/Hanzi/constants';\r\nimport { CARD_BASE_SIZE, CARD_FOCUS_MODE_SIZE } from './constants';\r\nimport {\r\n\tcardAnimationVariants,\r\n\tcardInnerContainerFrontAnimationVariants,\r\n\tcardInnerContainerBackAnimationVariants,\r\n} from './transitions';\r\nimport { cardPropTypes, cardDefaultProps } from './types';\r\nimport CardPlaceholder from './CardPlaceholder';\r\nimport CardWrapper from './CardWrapper';\r\nimport CardContainer from './CardContainer';\r\nimport MoreInfoContainer from './MoreInfoContainer';\r\nimport WordInfoGroup from './WordInfoGroup';\r\nimport WordActionGroup from './WordActionGroup';\r\nimport FocusModeInfoText from './FocusModeInfoText';\r\nimport CardInnerContainerFront from './CardInnerContainerFront';\r\nimport CardInnerContainerBack from './CardInnerContainerBack';\r\n\r\nconst Card = ({\r\n\ttext,\r\n\tisParentHovering,\r\n\tisChildInFocusMode,\r\n\tsetIsChildInFocusMode,\r\n\tsmAndDown,\r\n\t...cardProps\r\n}) => {\r\n\tconst theme = useTheme();\r\n\tconst { hanzi, writer, rewrite } = useHanzi(text);\r\n\r\n\tconst [isHovering, setIsHovering] = useState(false);\r\n\tconst [isFlipped, setIsFlipped] = useState(false);\r\n\tconst [isFocusMode, setIsFocusMode] = useState(false);\r\n\tconst [isChallengeMode, setIsChallengeMode] = useState(false);\r\n\tconst [moreInfo, setMoreInfo] = useState([]);\r\n\r\n\tconst onSetFocusMode = v => {\r\n\t\trewrite(text, {\r\n\t\t\tsize: (v && CARD_FOCUS_MODE_SIZE) || CARD_BASE_SIZE,\r\n\t\t\tstartMode: (v && START_MODES.QUIZ) || START_MODES.LOOP,\r\n\t\t});\r\n\t\tsetIsChildInFocusMode(v);\r\n\t\tsetIsFocusMode(v);\r\n\t};\r\n\r\n\t// Close open cards when when clicked elsewhere\r\n\tconst currentCard = useOuterClick(() => {\r\n\t\t// We are only concerned with this on mobile\r\n\t\tif (!smAndDown) return;\r\n\r\n\t\t// If we are in focus mode, ignore it\r\n\t\tif (isChildInFocusMode) return;\r\n\r\n\t\t// Else if the card is not hovered anyway, don't touch it\r\n\t\tif (!isHovering) return;\r\n\r\n\t\t// Onl the cards that are open when we click outside should close\r\n\t\tsetIsHovering(false);\r\n\t});\r\n\r\n\t// Focus mode overrides the hovering\r\n\t// If it's in focus mode but it's not this child, don't allow hover\r\n\tlet _isHovering = isHovering;\r\n\tif (isChildInFocusMode) _isHovering = isFocusMode;\r\n\r\n\tconst _isParentHovering = isParentHovering;\r\n\r\n\tconst animate = (isFocusMode && 'isFocusMode') || [\r\n\t\t(_isParentHovering && 'isParentHovering') || 'isParentNotHovering',\r\n\t\t(_isParentHovering && _isHovering && 'isHovering') || 'isNotHovering',\r\n\t];\r\n\r\n\tconst onClick = () => {\r\n\t\tif (isFocusMode) return;\r\n\r\n\t\t// eslint-disable-next-line no-unused-expressions\r\n\t\tcurrentCard.current?.scrollIntoView({\r\n\t\t\tblock: 'center',\r\n\t\t\tbehavior: 'smooth',\r\n\t\t\t// inline: 'end',\r\n\t\t});\r\n\t\tsetIsHovering(!_isHovering);\r\n\t};\r\n\r\n\tconst onTapCancel = () => {\r\n\t\tif (isFocusMode) return;\r\n\t\tsetIsHovering(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<CardPlaceholder\r\n\t\t\tref={currentCard}\r\n\t\t\tlayout\r\n\t\t\tinitial={false}\r\n\t\t\tcustom={theme}\r\n\t\t\tvariants={cardAnimationVariants}\r\n\t\t\tanimate={animate}\r\n\t\t\t$isParentHovering={_isParentHovering}\r\n\t\t\t$isFocusMode={isFocusMode}\r\n\t\t\tonHoverStart={() => {\r\n\t\t\t\tsetIsHovering(true);\r\n\t\t\t}}\r\n\t\t\tonHoverEnd={() => {\r\n\t\t\t\tsetIsHovering(false);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<CardWrapper layout $isParentHovering={_isParentHovering}>\r\n\t\t\t\t{writer && (\r\n\t\t\t\t\t<WordInfoGroup\r\n\t\t\t\t\t\ttheme={theme}\r\n\t\t\t\t\t\tisParentHovering={isParentHovering}\r\n\t\t\t\t\t\tisHovering={_isHovering}\r\n\t\t\t\t\t\tvisible\r\n\t\t\t\t\t\tcardProps={cardProps}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t<CardContainer>\r\n\t\t\t\t\t<CardInnerContainerFront\r\n\t\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\t\tonTapCancel={onTapCancel}\r\n\t\t\t\t\t\tvariants={cardInnerContainerFrontAnimationVariants}\r\n\t\t\t\t\t\tanimate={[\r\n\t\t\t\t\t\t\t(isFlipped && 'isFlipped') || 'isNotFlipped',\r\n\t\t\t\t\t\t\t(isFocusMode && 'isFocusMode') || 'isNotFocusMode',\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{isFocusMode && (\r\n\t\t\t\t\t\t\t<FocusModeInfoText>\r\n\t\t\t\t\t\t\t\tPractice writing using your mouse or finger\r\n\t\t\t\t\t\t\t</FocusModeInfoText>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{hanzi}\r\n\t\t\t\t\t</CardInnerContainerFront>\r\n\t\t\t\t\t<CardInnerContainerBack\r\n\t\t\t\t\t\tonClick={onClick}\r\n\t\t\t\t\t\tonTapCancel={onTapCancel}\r\n\t\t\t\t\t\t$isFlipped={isFlipped}\r\n\t\t\t\t\t\tvariants={cardInnerContainerBackAnimationVariants}\r\n\t\t\t\t\t\tanimate={(isFlipped && 'isFlipped') || 'isNotFlipped'}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<MoreInfoContainer details={moreInfo} />\r\n\t\t\t\t\t</CardInnerContainerBack>\r\n\t\t\t\t</CardContainer>\r\n\t\t\t\t{writer && (\r\n\t\t\t\t\t<WordActionGroup\r\n\t\t\t\t\t\twriter={writer}\r\n\t\t\t\t\t\tisParentHovering={isParentHovering}\r\n\t\t\t\t\t\tisHovering={_isHovering}\r\n\t\t\t\t\t\ttheme={theme}\r\n\t\t\t\t\t\tisFlipped={isFlipped}\r\n\t\t\t\t\t\tsetIsFlipped={setIsFlipped}\r\n\t\t\t\t\t\tmoreInfo={moreInfo}\r\n\t\t\t\t\t\tsetMoreInfo={setMoreInfo}\r\n\t\t\t\t\t\tisFocusMode={isFocusMode}\r\n\t\t\t\t\t\tonSetFocusMode={onSetFocusMode}\r\n\t\t\t\t\t\tisChallengeMode={isChallengeMode}\r\n\t\t\t\t\t\tsetIsChallengeMode={setIsChallengeMode}\r\n\t\t\t\t\t\tcardProps={cardProps}\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t</CardWrapper>\r\n\t\t</CardPlaceholder>\r\n\t);\r\n};\r\n\r\nCard.propTypes = cardPropTypes;\r\nCard.defaultProps = cardDefaultProps;\r\n\r\nexport default Card;\r\n","import styled from 'styled-components';\r\n\r\nconst FocusModeWrapper = styled.div`\r\n\tposition: fixed;\r\n\twidth: 100%;\r\n\theight: 100%;\r\n\tbackground: black;\r\n\tz-index: 2;\r\n\ttop: 0px;\r\n\tleft: 0px;\r\n\ttransform-origin: 50% 50% 0px;\r\n`;\r\n\r\nexport default FocusModeWrapper;\r\n","import React, { useState } from 'react';\r\nimport { useMediaQuery } from '@material-ui/core';\r\n\r\nimport ContainerWithCenteredItems from 'components/ContainerWithCenteredItems';\r\nimport Card from 'containers/Learn/CardGrid/Card';\r\nimport { propTypes, defaultProps } from './types';\r\nimport FocusModeWrapper from './FocusModeWrapper';\r\n\r\nconst CardGrid = ({ cards }) => {\r\n\tconst smAndDown = useMediaQuery(theme => theme.breakpoints.down('sm'));\r\n\r\n\tconst [isChildInFocusMode, setIsChildInFocusMode] = useState(false);\r\n\tconst [isHovering, setIsHovering] = useState(false);\r\n\tconst onEnter = () => {\r\n\t\tif (smAndDown) return;\r\n\t\tsetIsHovering(true);\r\n\t};\r\n\tconst onLeave = () => {\r\n\t\tif (isChildInFocusMode) return;\r\n\t\tsetIsHovering(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<ContainerWithCenteredItems\r\n\t\t\tonMouseEnter={onEnter}\r\n\t\t\tonMouseLeave={onLeave}\r\n\t\t>\r\n\t\t\t{isChildInFocusMode && <FocusModeWrapper />}\r\n\t\t\t{cards.map(card => (\r\n\t\t\t\t<Card\r\n\t\t\t\t\tisParentHovering={smAndDown || isHovering}\r\n\t\t\t\t\tkey={card.id}\r\n\t\t\t\t\tisChildInFocusMode={isChildInFocusMode}\r\n\t\t\t\t\tsetIsChildInFocusMode={setIsChildInFocusMode}\r\n\t\t\t\t\tsmAndDown={smAndDown}\r\n\t\t\t\t\t{...card}\r\n\t\t\t\t/>\r\n\t\t\t))}\r\n\t\t</ContainerWithCenteredItems>\r\n\t);\r\n};\r\n\r\nCardGrid.propTypes = propTypes;\r\nCardGrid.defaultProps = defaultProps;\r\n\r\nexport default CardGrid;\r\n"],"sourceRoot":""}