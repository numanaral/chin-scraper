{"version":3,"sources":["components/CenteredContainer.js","components/Source.js","consts.js","utils.js","components/IFrame.js","components/Frames.js","components/SearchBox.js","containers/Scraper.js","containers/App.js","index.js"],"names":["CenteredContainer","styled","div","Source","style","position","top","right","fontSize","href","REGEX_CHINESE","REGEX_PINYIN","isChinese","text","test","getEscapedChar","char","escape","toLowerCase","replace","corsBypassedFetch","url","a","fetch","method","res","ok","status","Error","fetchPinyin","escapedCharacter","setPinyin","CORS_BYPASS_URL","resposeText","match","exec","console","log","err","getEnglishTranslation","chineseText","setEnglishTranslation","headers","accept","referrer","referrerPolicy","body","mode","credentials","json","data","error","Container","StyledIframe","iframe","Pinyin","span","EnglishTranslation","Speak","button","IFrame","escapedChar","originalChar","useState","pinyin","englishTranslation","useEffect","onClick","synth","window","speechSynthesis","utterance","SpeechSynthesisUtterance","voice","getVoices","find","v","lang","pitch","rate","speak","title","src","Frames","currentCharsWithEscapedPairs","map","charPair","ind","key","defaultProps","SearchBox","onChange","onSubmit","e","preventDefault","htmlFor","type","placeholder","name","Scraper","currentChars","setCurrentChars","setCurrentCharsWithEscapedPairs","escapedChars","split","filter","input","target","value","App","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.2e0ac6d2.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nconst CenteredContainer = styled.div`\r\n\twidth: 100%;\r\n\ttext-align: center;\r\n`;\r\n\r\nexport default CenteredContainer;\r\n","import React from 'react';\r\nconst Source = () => (\r\n\t<div\r\n\t\tstyle={{\r\n\t\t\tposition: 'absolute',\r\n\t\t\ttop: '10px',\r\n\t\t\tright: '10px',\r\n\t\t\tfontSize: '10px',\r\n\t\t}}\r\n\t>\r\n\t\t<span> Scraped from: </span>\r\n\t\t<a href=\"https://www.hanzi5.com/\">Hanzi 5</a>\r\n\t</div>\r\n);\r\n\r\nexport default Source;\r\n","export const REGEX_CHINESE = /\\p{Script=Han}/u;\r\n//const REGEX_CHINESE = /[\\u4e00-\\u9fff]|[\\u3400-\\u4dbf]|[\\u{20000}-\\u{2a6df}]|[\\u{2a700}-\\u{2b73f}]|[\\u{2b740}-\\u{2b81f}]|[\\u{2b820}-\\u{2ceaf}]|[\\uf900-\\ufaff]|[\\u3300-\\u33ff]|[\\ufe30-\\ufe4f]|[\\uf900-\\ufaff]|[\\u{2f800}-\\u{2fa1f}]/u;\r\nexport const REGEX_PINYIN = /<td class=\"hanzi5-article-hanzi-info-td2\">(.*)<\\/td>/;\r\nexport const CORS_BYPASS_URL = 'https://cors-anywhere.herokuapp.com/';\r\nexport const GIF_URL_PREFIX = 'https://www.hanzi5.com/assets/bishun/animation/';\r\nexport const GIF_URL_POSTFIX = '-bishun.gif';\r\nexport const PINYIN_URL_PREFIX = 'https://www.hanzi5.com/bishun/';\r\nexport const PINYIN_URL_POSTFIX = '.html';\r\nexport const SYSTRAN_URL_PREFIX = 'https://translate.systran.net/lookup';\r\n","import {\r\n\tREGEX_CHINESE,\r\n\tCORS_BYPASS_URL,\r\n\tREGEX_PINYIN,\r\n\tPINYIN_URL_PREFIX,\r\n\tPINYIN_URL_POSTFIX,\r\n\tSYSTRAN_URL_PREFIX,\r\n} from 'consts';\r\n\r\nexport const isChinese = text => REGEX_CHINESE.test(text);\r\nexport const getEscapedChar = char =>\r\n\tescape(char).toLowerCase().replace(/%u/g, '');\r\n\r\nexport const corsBypassedFetch = async url => {\r\n\tconst res = await fetch(CORS_BYPASS_URL + url, {\r\n\t\tmethod: 'GET',\r\n\t});\r\n\r\n\t// Cannot extract text\r\n\t// Failed to execute 'text' on 'Response': Illegal invocation\r\n\tconst { ok, status } = res;\r\n\tif (!ok) throw new Error(`HTTP Error ${status}`);\r\n\r\n\treturn res.text();\r\n};\r\nexport const fetchPinyin = async (escapedCharacter, setPinyin) => {\r\n\ttry {\r\n\t\tconst resposeText = await corsBypassedFetch(\r\n\t\t\tCORS_BYPASS_URL +\r\n\t\t\t\tPINYIN_URL_PREFIX +\r\n\t\t\t\tescapedCharacter +\r\n\t\t\t\tPINYIN_URL_POSTFIX\r\n\t\t);\r\n\r\n\t\tconst match = REGEX_PINYIN.exec(resposeText);\r\n\t\tif (match === null) {\r\n\t\t\tconsole.log('Scraping failed for the pinyin');\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetPinyin(match[1]);\r\n\t} catch (err) {\r\n\t\tconsole.log('Failed to fetch pinyin');\r\n\t\tconsole.log({ err });\r\n\t}\r\n};\r\n\r\nexport const getEnglishTranslation = async (\r\n\tchineseText,\r\n\tsetEnglishTranslation\r\n) => {\r\n\ttry {\r\n\t\tconst res = await fetch(\r\n\t\t\t'https://cors-anywhere.herokuapp.com/https://backend-dot-try-puppeteer.appspot.com/run',\r\n\t\t\t{\r\n\t\t\t\theaders: {\r\n\t\t\t\t\taccept: '*/*',\r\n\t\t\t\t\t'accept-language': 'en',\r\n\t\t\t\t\t'content-type':\r\n\t\t\t\t\t\t'multipart/form-data; boundary=----WebKitFormBoundary8HRvFx6KkZQPoCAm',\r\n\t\t\t\t\t'sec-fetch-dest': 'empty',\r\n\t\t\t\t\t'sec-fetch-mode': 'cors',\r\n\t\t\t\t\t'sec-fetch-site': 'cross-site',\r\n\t\t\t\t},\r\n\t\t\t\treferrer: 'https://try-puppeteer.appspot.com/',\r\n\t\t\t\treferrerPolicy: 'strict-origin-when-cross-origin',\r\n\t\t\t\tbody: `------WebKitFormBoundary8HRvFx6KkZQPoCAm\\r\\nContent-Disposition: form-data; name=\\\"file\\\"; filename=\\\"blob\\\"\\r\\nContent-Type: text/javascript\\r\\n\\r\\n  const browser = await puppeteer.launch();\\n  const page = await browser.newPage();\\n\\n  await page.goto('https://translate.google.com/#zh-CN|en|${chineseText}');\\n\\n  // Extract the results from the page.\\n  const result = await page.evaluate(() => {\\n     console.log('here')\\n    return [...document.querySelectorAll('.tlid-translation')][0].textContent;\\n  });\\n\\nconsole.log(result);\\n\\n  await browser.close();\\r\\n------WebKitFormBoundary8HRvFx6KkZQPoCAm--\\r\\n`,\r\n\t\t\t\tmethod: 'POST',\r\n\t\t\t\tmode: 'cors',\r\n\t\t\t\tcredentials: 'omit',\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\t// Cannot extract text\r\n\t\t// Failed to execute 'text' on 'Response': Illegal invocation\r\n\t\tconst { ok, status } = res;\r\n\t\tif (!ok) throw new Error(`HTTP Error ${status}`);\r\n\r\n\t\tconst data = await res.json();\r\n\r\n\t\tsetEnglishTranslation(data.log);\r\n\t} catch (err) {\r\n\t\tconsole.log('Error translating');\r\n\t\tconsole.error(err);\r\n\t}\r\n};\r\n\r\nexport const speak = text => {\r\n\tconst synth = window.speechSynthesis;\r\n\r\n\tconst utterance = new SpeechSynthesisUtterance(text);\r\n\tutterance.voice = synth.getVoices().find(v => v.lang === 'zh-CN');\r\n\tutterance.pitch = 1;\r\n\tutterance.rate = 0.8;\r\n\r\n\tsynth.speak(utterance);\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { string } from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nimport { GIF_URL_PREFIX, GIF_URL_POSTFIX } from 'consts';\r\nimport { fetchPinyin, getEnglishTranslation, speak } from 'utils';\r\n\r\nconst Container = styled.div`\r\n\tposition: relative;\r\n\tdisplay: inline-block;\r\n`;\r\n\r\nconst StyledIframe = styled.iframe`\r\n\theight: 300px;\r\n\tborder: none;\r\n\t/* transition: transform 0.5s;\r\n\t:hover {\r\n\t\ttransform: scale(1.3);\r\n\t} */\r\n`;\r\n\r\nconst Pinyin = styled.span`\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbottom: 10px;\r\n\tmargin: auto;\r\n\tfont-weight: bold;\r\n\tfont-size: 20px;\r\n\tborder: 2px dashed;\r\n`;\r\n\r\nconst EnglishTranslation = styled.span`\r\n\tposition: absolute;\r\n\tleft: 0;\r\n\tright: 0;\r\n\tbottom: 40px;\r\n\tmargin: auto;\r\n\tfont-weight: bold;\r\n\tfont-size: 20px;\r\n\tborder: 2px dashed;\r\n`;\r\n\r\nconst Speak = styled.button`\r\n\tposition: absolute;\r\n\tright: 10px;\r\n\ttop: 10px;\r\n\tmargin: auto;\r\n\tborder-radius: 4px;\r\n`;\r\n\r\nconst IFrame = ({ escapedChar, originalChar }) => {\r\n\tconst [pinyin, setPinyin] = useState('');\r\n\tconst [englishTranslation, setEnglishTranslation] = useState('');\r\n\r\n\tuseEffect(() => {\r\n\t\tfetchPinyin(escapedChar, setPinyin);\r\n\t\tgetEnglishTranslation(originalChar, setEnglishTranslation);\r\n\t}, [escapedChar, originalChar]);\r\n\r\n\treturn (\r\n\t\t<Container>\r\n\t\t\t<Speak onClick={() => speak(originalChar)}> Speak </Speak>\r\n\t\t\t<StyledIframe\r\n\t\t\t\ttitle={`gif-${escapedChar}`}\r\n\t\t\t\tsrc={GIF_URL_PREFIX + escapedChar + GIF_URL_POSTFIX}\r\n\t\t\t/>\r\n\t\t\t{pinyin && <Pinyin> {pinyin} </Pinyin>}\r\n\t\t\t{englishTranslation && (\r\n\t\t\t\t<EnglishTranslation> {englishTranslation} </EnglishTranslation>\r\n\t\t\t)}\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nIFrame.propTypes = {\r\n\toriginalChar: string.isRequired,\r\n\tescapedChar: string.isRequired,\r\n};\r\n\r\nexport default IFrame;\r\n","import React from 'react';\r\nimport { arrayOf, shape, string } from 'prop-types';\r\n\r\nimport CenteredContainer from 'components/CenteredContainer';\r\nimport IFrame from 'components/IFrame';\r\n\r\nconst Frames = ({ currentCharsWithEscapedPairs }) => (\r\n\t<CenteredContainer>\r\n\t\t{currentCharsWithEscapedPairs.map((charPair, ind) => (\r\n\t\t\t<IFrame key={ind} {...charPair} />\r\n\t\t))}\r\n\t</CenteredContainer>\r\n);\r\n\r\nFrames.propTypes = {\r\n\tcurrentCharsWithEscapedPairs: arrayOf(\r\n\t\tshape({\r\n\t\t\toriginalChar: string.isRequired,\r\n\t\t\tescapedChar: string.isRequired,\r\n\t\t})\r\n\t),\r\n};\r\n\r\nFrames.defaultProps = {\r\n\tcurrentCharsWithEscapedPairs: [],\r\n};\r\n\r\nexport default Frames;\r\n","import React from 'react';\r\nimport { func } from 'prop-types';\r\n\r\nconst SearchBox = ({ onChange }) => (\r\n\t<form onSubmit={e => e.preventDefault()}>\r\n\t\t<label htmlFor=\"chinese-character\">\r\n\t\t\tSearch for Chinese Character(s)\r\n\t\t</label>\r\n\t\t<br />\r\n\t\t<input\r\n\t\t\ttype=\"search\"\r\n\t\t\tplaceholder=\"Eg: 你好\"\r\n\t\t\tname=\"chinese-character\"\r\n\t\t\tonChange={onChange}\r\n\t\t/>\r\n\t\t<br />\r\n\t</form>\r\n);\r\n\r\nSearchBox.propTypes = {\r\n\tonChange: func.isRequired,\r\n};\r\n\r\nexport default SearchBox;\r\n","import React, { useEffect, useState } from 'react';\r\n\r\nimport { isChinese, getEscapedChar } from 'utils';\r\nimport Frames from 'components/Frames';\r\nimport SearchBox from 'components/SearchBox';\r\n\r\nconst Scraper = () => {\r\n\tconst [currentChars, setCurrentChars] = useState('');\r\n\tconst [\r\n\t\tcurrentCharsWithEscapedPairs,\r\n\t\tsetCurrentCharsWithEscapedPairs,\r\n\t] = useState([]);\r\n\r\n\tconst handleChange = e => {\r\n\t\tconst input = e.target.value;\r\n\t\tif (!isChinese(input)) return;\r\n\t\tsetCurrentChars(input);\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tconst escapedChars = currentChars\r\n\t\t\t.split('')\r\n\t\t\t.filter(isChinese)\r\n\t\t\t.map(char => ({\r\n\t\t\t\tescapedChar: getEscapedChar(char),\r\n\t\t\t\toriginalChar: char,\r\n\t\t\t}));\r\n\t\tsetCurrentCharsWithEscapedPairs(escapedChars);\r\n\t}, [currentChars]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<SearchBox onChange={handleChange} />\r\n\t\t\t<br />\r\n\t\t\t<Frames\r\n\t\t\t\tcurrentCharsWithEscapedPairs={currentCharsWithEscapedPairs}\r\n\t\t\t/>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Scraper;\r\n","import React from 'react';\nimport 'normalize.css';\n\nimport CenteredContainer from 'components/CenteredContainer';\nimport Source from 'components/Source';\nimport Scraper from 'containers/Scraper';\n\nconst App = () => {\n\treturn (\n\t\t<CenteredContainer>\n\t\t\t<Source />\n\t\t\t<Scraper />\n\t\t</CenteredContainer>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from 'containers/App';\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\trootElement\n);\n"],"sourceRoot":""}